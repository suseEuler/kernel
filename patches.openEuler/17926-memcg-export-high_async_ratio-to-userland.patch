From 4eb5e50e0f617a3158efdd61985bd49dd326da56 Mon Sep 17 00:00:00 2001
From: Lu Jialin <lujialin4@huawei.com>
Date: Tue, 9 Aug 2022 23:06:55 +0800
Subject: [PATCH] memcg: export high_async_ratio to userland
Patch-mainline: Not yet, from openEuler
References: bsn#22
openEuler-commit: 4eb5e50e0f617a3158efdd61985bd49dd326da56
Modified-by-SEL: No


hulk inclusion
category: feature
bugzilla: https://gitee.com/openeuler/kernel/issues/I4IMAK
CVE: NA

-------------------------------

User can set high_async_ratio from 0 to 9; start memcg high async when
memcg_usage is larger than memory.high * high_async_ratio / 10;

Signed-off-by: Lu Jialin <lujialin4@huawei.com>
Reviewed-by: Xiu Jianfeng <xiujianfeng@huawei.com>
Reviewed-by: Kefeng Wang <wangkefeng.wang@huawei.com>
Signed-off-by: Zheng Zengkai <zhengzengkai@huawei.com>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 mm/memcontrol.c | 38 ++++++++++++++++++++++++++++++++++++++
 1 file changed, 38 insertions(+)

diff --git a/mm/memcontrol.c b/mm/memcontrol.c
index a6ee6091afb2..e15389aeb641 100644
--- a/mm/memcontrol.c
+++ b/mm/memcontrol.c
@@ -5286,6 +5286,38 @@ static ssize_t memory_reclaim(struct kernfs_open_file *of, char *buf,
 	return nbytes;
 }
 
+static int memcg_high_async_ratio_show(struct seq_file *m, void *v)
+{
+	return seq_puts_memcg_tunable(m,
+	       READ_ONCE(mem_cgroup_from_seq(m)->high_async_ratio));
+}
+
+static ssize_t memcg_high_async_ratio_write(struct kernfs_open_file *of,
+					    char *buf, size_t nbytes, loff_t off)
+{
+	struct mem_cgroup *memcg = mem_cgroup_from_css(of_css(of));
+	int ret, high_async_ratio;
+
+	buf = strstrip(buf);
+	if (!buf)
+		return -EINVAL;
+
+	ret = kstrtoint(buf, 0, &high_async_ratio);
+	if (ret)
+		return ret;
+
+	if (high_async_ratio >= HIGH_ASYNC_RATIO_BASE ||
+	    high_async_ratio < HIGH_ASYNC_RATIO_DEFAULT)
+		return -EINVAL;
+
+	WRITE_ONCE(memcg->high_async_ratio, high_async_ratio);
+
+	if (is_high_async_reclaim(memcg))
+		schedule_work(&memcg->high_work);
+
+	return nbytes;
+}
+
 static struct cftype mem_cgroup_legacy_files[] = {
 	{
 		.name = "usage_in_bytes",
@@ -5487,6 +5519,12 @@ static struct cftype mem_cgroup_legacy_files[] = {
 		.name = "reclaim",
 		.write = memory_reclaim,
 	},
+	{
+		.name = "high_async_ratio",
+		.flags = CFTYPE_NOT_ON_ROOT,
+		.seq_show = memcg_high_async_ratio_show,
+		.write = memcg_high_async_ratio_write,
+	},
 	{ },	/* terminate */
 };
 
-- 
2.33.0

