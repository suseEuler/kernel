From 057bcf8c9cfdc7dc469750831a8ad5c56d3b2350 Mon Sep 17 00:00:00 2001
From: Mao Minkai <maominkai@wxiat.com>
Date: Mon, 7 Nov 2022 14:11:47 +0800
Subject: [PATCH] sw64: bpf: improve BPF_CALL address check
Patch-mainline: Not yet, from openEuler
References: bsn#22
openEuler-commit: 057bcf8c9cfdc7dc469750831a8ad5c56d3b2350
Modified-by-SEL: No


Sunway inclusion
category: feature
bugzilla: https://gitee.com/openeuler/kernel/issues/I645QF

--------------------------------

Improve BPF_CALL address check by using macros to support different
address spaces.

Signed-off-by: Mao Minkai <maominkai@wxiat.com>
Reviewed-by: He Sheng <hesheng@wxiat.com>
Signed-off-by: Gu Zitao <guzitao@wxiat.com>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 arch/sw_64/net/bpf_jit_comp.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/arch/sw_64/net/bpf_jit_comp.c b/arch/sw_64/net/bpf_jit_comp.c
index 2c238c33e574..47e805569154 100644
--- a/arch/sw_64/net/bpf_jit_comp.c
+++ b/arch/sw_64/net/bpf_jit_comp.c
@@ -1182,9 +1182,9 @@ static int build_insn(const struct bpf_insn *insn, struct jit_ctx *ctx)
 
 	case BPF_JMP | BPF_CALL:
 		func = (u64)__bpf_call_base + imm;
-		if ((func & 0xffffffffe0000000UL) != 0xffffffff80000000UL)
+		if ((func & ~(KERNEL_IMAGE_SIZE - 1)) != __START_KERNEL_map)
 			/* calling bpf program, switch to vmalloc addr */
-			func = (func & 0xffffffff) | 0xfffff00000000000UL;
+			func = (func & U32_MAX) | VMALLOC_START;
 		emit_sw64_ldu64(SW64_BPF_REG_PV, func, ctx);
 		emit(SW64_BPF_CALL(SW64_BPF_REG_RA, SW64_BPF_REG_PV), ctx);
 		break;
-- 
2.33.0

