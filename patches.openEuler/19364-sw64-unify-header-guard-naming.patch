From 7e3cd3557bdcd5f4038c23fc8fd1e0e2bdfc5ab3 Mon Sep 17 00:00:00 2001
From: Mao Minkai <maominkai@wxiat.com>
Date: Wed, 7 Sep 2022 15:20:01 +0800
Subject: [PATCH] sw64: unify header guard naming
Patch-mainline: Not yet, from openEuler
References: bsn#22
openEuler-commit: 7e3cd3557bdcd5f4038c23fc8fd1e0e2bdfc5ab3
Modified-by-SEL: No


Sunway inclusion
category: feature
bugzilla: https://gitee.com/openeuler/kernel/issues/I56OLG

--------------------------------

Use the canonical header guard naming of the full path to the header.

Signed-off-by: Mao Minkai <maominkai@wxiat.com>
Reviewed-by: He Sheng <hesheng@wxiat.com>
Signed-off-by: Gu Zitao <guzitao@wxiat.com>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 arch/sw_64/include/asm/asm-offsets.h     | 2 +-
 arch/sw_64/include/asm/asm-prototypes.h  | 2 +-
 arch/sw_64/include/asm/bugs.h            | 2 +-
 arch/sw_64/include/asm/cache.h           | 2 +-
 arch/sw_64/include/asm/checksum.h        | 2 +-
 arch/sw_64/include/asm/chip3_io.h        | 2 +-
 arch/sw_64/include/asm/cmpxchg.h         | 1 +
 arch/sw_64/include/asm/core.h            | 2 +-
 arch/sw_64/include/asm/delay.h           | 2 +-
 arch/sw_64/include/asm/device.h          | 2 +-
 arch/sw_64/include/asm/dmi.h             | 2 +-
 arch/sw_64/include/asm/early_ioremap.h   | 2 +-
 arch/sw_64/include/asm/extable.h         | 2 +-
 arch/sw_64/include/asm/hmcall.h          | 6 +++---
 arch/sw_64/include/asm/hw_init.h         | 2 +-
 arch/sw_64/include/asm/hw_irq.h          | 2 +-
 arch/sw_64/include/asm/irq_impl.h        | 2 +-
 arch/sw_64/include/asm/jump_label.h      | 6 +++---
 arch/sw_64/include/asm/kvm_cma.h         | 6 +++---
 arch/sw_64/include/asm/kvm_emulate.h     | 2 +-
 arch/sw_64/include/asm/kvm_para.h        | 2 +-
 arch/sw_64/include/asm/kvm_timer.h       | 2 +-
 arch/sw_64/include/asm/linkage.h         | 2 +-
 arch/sw_64/include/asm/mmu.h             | 2 +-
 arch/sw_64/include/asm/ptrace.h          | 2 +-
 arch/sw_64/include/asm/setup.h           | 2 +-
 arch/sw_64/include/asm/sfp-machine.h     | 2 +-
 arch/sw_64/include/asm/signal.h          | 2 +-
 arch/sw_64/include/asm/smp.h             | 2 +-
 arch/sw_64/include/asm/spinlock_types.h  | 2 +-
 arch/sw_64/include/asm/suspend.h         | 6 +++---
 arch/sw_64/include/asm/sw64_init.h       | 6 +++---
 arch/sw_64/include/asm/sw64io.h          | 2 +-
 arch/sw_64/include/asm/tc.h              | 2 +-
 arch/sw_64/include/asm/timex.h           | 2 +-
 arch/sw_64/include/asm/tlb.h             | 2 +-
 arch/sw_64/include/asm/wrperfmon.h       | 2 +-
 arch/sw_64/include/asm/xchg.h            | 9 ++++++---
 arch/sw_64/include/asm/xor.h             | 2 +-
 arch/sw_64/include/uapi/asm/errno.h      | 2 +-
 arch/sw_64/include/uapi/asm/fcntl.h      | 2 +-
 arch/sw_64/include/uapi/asm/hmcall.h     | 2 +-
 arch/sw_64/include/uapi/asm/perf_regs.h  | 6 +++---
 arch/sw_64/include/uapi/asm/setup.h      | 2 +-
 arch/sw_64/include/uapi/asm/sigcontext.h | 2 +-
 arch/sw_64/include/uapi/asm/siginfo.h    | 2 +-
 arch/sw_64/include/uapi/asm/stat.h       | 2 +-
 arch/sw_64/kernel/pci_impl.h             | 2 +-
 arch/sw_64/kernel/proto.h                | 2 +-
 arch/sw_64/kvm/irq.h                     | 6 +++---
 arch/sw_64/math-emu/sfp-util.h           | 5 +++++
 arch/sw_64/net/bpf_jit.h                 | 6 +++---
 arch/sw_64/oprofile/op_impl.h            | 2 +-
 arch/sw_64/tools/relocs.h                | 6 +++---
 54 files changed, 81 insertions(+), 72 deletions(-)

diff --git a/arch/sw_64/include/asm/asm-offsets.h b/arch/sw_64/include/asm/asm-offsets.h
index 72cd408a9c6f..5ddfd96ccb79 100644
--- a/arch/sw_64/include/asm/asm-offsets.h
+++ b/arch/sw_64/include/asm/asm-offsets.h
@@ -4,4 +4,4 @@
 
 #include <generated/asm-offsets.h>
 
-#endif
+#endif /* _ASM_SW64_ASM_OFFSETS_H */
diff --git a/arch/sw_64/include/asm/asm-prototypes.h b/arch/sw_64/include/asm/asm-prototypes.h
index 15bad8ef6883..67746d6bffb7 100644
--- a/arch/sw_64/include/asm/asm-prototypes.h
+++ b/arch/sw_64/include/asm/asm-prototypes.h
@@ -19,4 +19,4 @@ extern void __remlu(void);
 extern void __divwu(void);
 extern void __remwu(void);
 
-#endif
+#endif /* _ASM_SW64_ASM_PROTOTYPES_H */
diff --git a/arch/sw_64/include/asm/bugs.h b/arch/sw_64/include/asm/bugs.h
index c4a336fe04a2..1cd94ed171fb 100644
--- a/arch/sw_64/include/asm/bugs.h
+++ b/arch/sw_64/include/asm/bugs.h
@@ -6,4 +6,4 @@ static void check_bugs(void)
 {
 }
 
-#endif
+#endif /* _ASM_SW64_BUGS_H */
diff --git a/arch/sw_64/include/asm/cache.h b/arch/sw_64/include/asm/cache.h
index 1dca2e2e04a4..fade2e095b8b 100644
--- a/arch/sw_64/include/asm/cache.h
+++ b/arch/sw_64/include/asm/cache.h
@@ -8,4 +8,4 @@
 #define L1_CACHE_SHIFT		7
 #define L1_CACHE_BYTES		(1 << L1_CACHE_SHIFT)
 
-#endif
+#endif /* _ASM_SW64_CACHE_H */
diff --git a/arch/sw_64/include/asm/checksum.h b/arch/sw_64/include/asm/checksum.h
index 284c1678f51e..7f3768290402 100644
--- a/arch/sw_64/include/asm/checksum.h
+++ b/arch/sw_64/include/asm/checksum.h
@@ -123,4 +123,4 @@ static inline unsigned short from64to16(unsigned long x)
 	return out_v.us[0] + out_v.us[1];
 }
 
-#endif
+#endif /* _ASM_SW64_CHECKSUM_H */
diff --git a/arch/sw_64/include/asm/chip3_io.h b/arch/sw_64/include/asm/chip3_io.h
index 14d02c080607..3bfbc2bdafe7 100644
--- a/arch/sw_64/include/asm/chip3_io.h
+++ b/arch/sw_64/include/asm/chip3_io.h
@@ -314,4 +314,4 @@ enum {
 	GPIO_SWPORTA_DDR =	GPIO_BASE | 0x200UL,
 };
 /*--------------------------------------------------------------------------*/
-#endif
+#endif /* _ASM_SW64_CHIP3_IO_H */
diff --git a/arch/sw_64/include/asm/cmpxchg.h b/arch/sw_64/include/asm/cmpxchg.h
index e07abc47c7dd..7f2d103db9c2 100644
--- a/arch/sw_64/include/asm/cmpxchg.h
+++ b/arch/sw_64/include/asm/cmpxchg.h
@@ -39,6 +39,7 @@
 #endif
 #undef ____xchg
 #undef ____cmpxchg
+#undef _ASM_SW64_XCHG_H
 #define ____xchg(type, args...)		__xchg ##type(args)
 #define ____cmpxchg(type, args...)	__cmpxchg ##type(args)
 #include <asm/xchg.h>
diff --git a/arch/sw_64/include/asm/core.h b/arch/sw_64/include/asm/core.h
index 72d752c87412..e5e4cc138102 100644
--- a/arch/sw_64/include/asm/core.h
+++ b/arch/sw_64/include/asm/core.h
@@ -45,4 +45,4 @@ extern void entSys(void);
 extern void entUna(void);
 /* head.S */
 extern void __smp_callin(unsigned long);
-#endif
+#endif /* _ASM_SW64_CORE_H */
diff --git a/arch/sw_64/include/asm/delay.h b/arch/sw_64/include/asm/delay.h
index 45112c7c3c01..f4080753e954 100644
--- a/arch/sw_64/include/asm/delay.h
+++ b/arch/sw_64/include/asm/delay.h
@@ -8,4 +8,4 @@ extern void udelay(unsigned long usecs);
 extern void ndelay(unsigned long nsecs);
 #define ndelay ndelay
 
-#endif /* defined(_ASM_SW64_DELAY_H) */
+#endif /* _ASM_SW64_DELAY_H */
diff --git a/arch/sw_64/include/asm/device.h b/arch/sw_64/include/asm/device.h
index dadd756d6934..bc1408c47dd3 100644
--- a/arch/sw_64/include/asm/device.h
+++ b/arch/sw_64/include/asm/device.h
@@ -10,4 +10,4 @@ struct dev_archdata {
 
 struct pdev_archdata {
 };
-#endif
+#endif /* _ASM_SW64_DEVICE_H */
diff --git a/arch/sw_64/include/asm/dmi.h b/arch/sw_64/include/asm/dmi.h
index 5142aa66ea45..05e80c9a3a76 100644
--- a/arch/sw_64/include/asm/dmi.h
+++ b/arch/sw_64/include/asm/dmi.h
@@ -27,4 +27,4 @@
 #define dmi_unmap(x)			early_iounmap(x, 0)
 #define dmi_alloc(l)			kzalloc(l, GFP_KERNEL)
 
-#endif
+#endif /* _ASM_SW64_DMI_H */
diff --git a/arch/sw_64/include/asm/early_ioremap.h b/arch/sw_64/include/asm/early_ioremap.h
index 930c6bf36ad3..5459cba8a677 100644
--- a/arch/sw_64/include/asm/early_ioremap.h
+++ b/arch/sw_64/include/asm/early_ioremap.h
@@ -27,4 +27,4 @@ static inline void early_iounmap(volatile void __iomem *addr, unsigned long size
 }
 #define early_memunmap(addr, size)		early_iounmap(addr, size)
 
-#endif
+#endif /* _ASM_SW64_EARLY_IOREMAP_H */
diff --git a/arch/sw_64/include/asm/extable.h b/arch/sw_64/include/asm/extable.h
index ae753772a45a..3680b4a918a6 100644
--- a/arch/sw_64/include/asm/extable.h
+++ b/arch/sw_64/include/asm/extable.h
@@ -56,4 +56,4 @@ struct exception_table_entry {
 extern short regoffsets[];
 #define map_regs(r) (*(unsigned long *)((char *)regs + regoffsets[r]))
 
-#endif
+#endif /* _ASM_SW64_EXTABLE_H */
diff --git a/arch/sw_64/include/asm/hmcall.h b/arch/sw_64/include/asm/hmcall.h
index e85397ab06a1..04fcafac9e80 100644
--- a/arch/sw_64/include/asm/hmcall.h
+++ b/arch/sw_64/include/asm/hmcall.h
@@ -1,6 +1,6 @@
 /* SPDX-License-Identifier: GPL-2.0 */
-#ifndef _ASM_SW64_HMC_H
-#define _ASM_SW64_HMC_H
+#ifndef _ASM_SW64_HMCALL_H
+#define _ASM_SW64_HMCALL_H
 
 /*
  * Common HMC-code
@@ -216,4 +216,4 @@ __CALL_HMC_W1(wrtp, unsigned long);
 #endif /* !__ASSEMBLY__ */
 #endif /* __KERNEL__ */
 
-#endif /* _ASM_SW64_HMC_H */
+#endif /* _ASM_SW64_HMCALL_H */
diff --git a/arch/sw_64/include/asm/hw_init.h b/arch/sw_64/include/asm/hw_init.h
index 8a28aac2e54f..81dd2581e0da 100644
--- a/arch/sw_64/include/asm/hw_init.h
+++ b/arch/sw_64/include/asm/hw_init.h
@@ -162,4 +162,4 @@ DECLARE_STATIC_KEY_FALSE(run_mode_emul_key);
 	(((val) & CACHE_INDEX_BITS_MASK) >> CACHE_INDEX_BITS_SHIFT)
 #define current_cpu_data cpu_data[smp_processor_id()]
 
-#endif /* HW_INIT_H */
+#endif /* _ASM_SW64_HW_INIT_H */
diff --git a/arch/sw_64/include/asm/hw_irq.h b/arch/sw_64/include/asm/hw_irq.h
index f6fd1d802abd..ad5aed26efb7 100644
--- a/arch/sw_64/include/asm/hw_irq.h
+++ b/arch/sw_64/include/asm/hw_irq.h
@@ -13,4 +13,4 @@ DECLARE_PER_CPU(unsigned long, irq_pmi_count);
 typedef unsigned int vector_irq_t[PERCPU_MSI_IRQS];
 DECLARE_PER_CPU(vector_irq_t, vector_irq);
 #endif
-#endif
+#endif /* _ASM_SW64_HW_IRQ_H */
diff --git a/arch/sw_64/include/asm/irq_impl.h b/arch/sw_64/include/asm/irq_impl.h
index 48dbc486a126..797af433a126 100644
--- a/arch/sw_64/include/asm/irq_impl.h
+++ b/arch/sw_64/include/asm/irq_impl.h
@@ -45,4 +45,4 @@ extern void handle_ipi(struct pt_regs *regs);
 extern void __init sw64_init_irq(void);
 extern irqreturn_t timer_interrupt(int irq, void *dev);
 
-#endif
+#endif /* _ASM_SW64_IRQ_IMPL_H */
diff --git a/arch/sw_64/include/asm/jump_label.h b/arch/sw_64/include/asm/jump_label.h
index 78d3fb6246f0..32fbf7573b20 100644
--- a/arch/sw_64/include/asm/jump_label.h
+++ b/arch/sw_64/include/asm/jump_label.h
@@ -1,7 +1,7 @@
 /* SPDX-License-Identifier: GPL-2.0 */
 
-#ifndef __ASM_SW64_JUMP_LABEL_H
-#define __ASM_SW64_JUMP_LABEL_H
+#ifndef _ASM_SW64_JUMP_LABEL_H
+#define _ASM_SW64_JUMP_LABEL_H
 
 #ifndef __ASSEMBLY__
 
@@ -47,4 +47,4 @@ struct jump_entry {
 };
 
 #endif /* __ASSEMBLY__ */
-#endif /* __ASM_SW64_JUMP_LABEL_H */
+#endif /* _ASM_SW64_JUMP_LABEL_H */
diff --git a/arch/sw_64/include/asm/kvm_cma.h b/arch/sw_64/include/asm/kvm_cma.h
index 192bca436380..d50ba599ceb7 100644
--- a/arch/sw_64/include/asm/kvm_cma.h
+++ b/arch/sw_64/include/asm/kvm_cma.h
@@ -1,6 +1,6 @@
 /* SPDX-License-Identifier: GPL-2.0 */
-#ifndef _ASM_SW64_KVM_CMA_H__
-#define _ASM_SW64_KVM_CMA_H__
+#ifndef _ASM_SW64_KVM_CMA_H
+#define _ASM_SW64_KVM_CMA_H
 
 #include <linux/cma.h>
 
@@ -8,4 +8,4 @@ extern int __init kvm_cma_declare_contiguous(phys_addr_t base,
 			phys_addr_t size, phys_addr_t limit,
 			phys_addr_t alignment, unsigned int order_per_bit,
 			const char *name, struct cma **res_cma);
-#endif
+#endif /* _ASM_SW64_KVM_CMA_H */
diff --git a/arch/sw_64/include/asm/kvm_emulate.h b/arch/sw_64/include/asm/kvm_emulate.h
index d842008f189a..915aa6c0bce2 100644
--- a/arch/sw_64/include/asm/kvm_emulate.h
+++ b/arch/sw_64/include/asm/kvm_emulate.h
@@ -43,4 +43,4 @@ unsigned int interrupt_pending(struct kvm_vcpu *vcpu, bool *more);
 void clear_vcpu_irq(struct kvm_vcpu *vcpu);
 void inject_vcpu_irq(struct kvm_vcpu *vcpu, unsigned int irq);
 void try_deliver_interrupt(struct kvm_vcpu *vcpu, unsigned int irq, bool more);
-#endif
+#endif /* _ASM_SW64_KVM_EMULATE_H */
diff --git a/arch/sw_64/include/asm/kvm_para.h b/arch/sw_64/include/asm/kvm_para.h
index ba78c5371570..442f1c7d9f83 100644
--- a/arch/sw_64/include/asm/kvm_para.h
+++ b/arch/sw_64/include/asm/kvm_para.h
@@ -23,4 +23,4 @@ static inline unsigned long kvm_hypercall3(unsigned long num,
 		: "$1", "$22", "$23", "$24", "$25");
 	return __r0;
 }
-#endif
+#endif /* _ASM_SW64_KVM_PARA_H */
diff --git a/arch/sw_64/include/asm/kvm_timer.h b/arch/sw_64/include/asm/kvm_timer.h
index be50bba9c4c6..8080873c684f 100644
--- a/arch/sw_64/include/asm/kvm_timer.h
+++ b/arch/sw_64/include/asm/kvm_timer.h
@@ -6,4 +6,4 @@ void set_timer(struct kvm_vcpu *vcpu, unsigned long delta);
 void set_interrupt(struct kvm_vcpu *vcpu, unsigned int irq);
 enum hrtimer_restart clockdev_fn(struct hrtimer *timer);
 
-#endif
+#endif /* _ASM_SW64_KVM_TIMER_H */
diff --git a/arch/sw_64/include/asm/linkage.h b/arch/sw_64/include/asm/linkage.h
index 96c83663d9e8..6576fb46a000 100644
--- a/arch/sw_64/include/asm/linkage.h
+++ b/arch/sw_64/include/asm/linkage.h
@@ -6,4 +6,4 @@
 #define SYSCALL_ALIAS(alias, name)                                      \
 	asm(#alias " = " #name "\n\t.globl " #alias)
 
-#endif
+#endif /* _ASM_SW64_LINKAGE_H */
diff --git a/arch/sw_64/include/asm/mmu.h b/arch/sw_64/include/asm/mmu.h
index 548c73b318cb..f24219fac654 100644
--- a/arch/sw_64/include/asm/mmu.h
+++ b/arch/sw_64/include/asm/mmu.h
@@ -7,4 +7,4 @@ typedef struct {
 	unsigned long asid[NR_CPUS];
 	void *vdso;
 } mm_context_t;
-#endif
+#endif /* _ASM_SW64_MMU_H */
diff --git a/arch/sw_64/include/asm/ptrace.h b/arch/sw_64/include/asm/ptrace.h
index b5afebf82939..5f6cd305f95e 100644
--- a/arch/sw_64/include/asm/ptrace.h
+++ b/arch/sw_64/include/asm/ptrace.h
@@ -92,4 +92,4 @@ static inline unsigned long regs_return_value(struct pt_regs *regs)
 {
 	return regs->r0;
 }
-#endif
+#endif /* _ASM_SW64_PTRACE_H */
diff --git a/arch/sw_64/include/asm/setup.h b/arch/sw_64/include/asm/setup.h
index c0fb4e8bd80c..384eeba02144 100644
--- a/arch/sw_64/include/asm/setup.h
+++ b/arch/sw_64/include/asm/setup.h
@@ -43,4 +43,4 @@
 extern struct boot_params *sunway_boot_params;
 #endif
 
-#endif
+#endif /* _ASM_SW64_SETUP_H */
diff --git a/arch/sw_64/include/asm/sfp-machine.h b/arch/sw_64/include/asm/sfp-machine.h
index 9b3e8688feee..c1b914898543 100644
--- a/arch/sw_64/include/asm/sfp-machine.h
+++ b/arch/sw_64/include/asm/sfp-machine.h
@@ -66,4 +66,4 @@ do {								\
 /* We write the results always */
 #define FP_INHIBIT_RESULTS 0
 
-#endif
+#endif /* _ASM_SW64_SFP_MACHINE_H */
diff --git a/arch/sw_64/include/asm/signal.h b/arch/sw_64/include/asm/signal.h
index 0d846c1aa571..9e0936e6db2b 100644
--- a/arch/sw_64/include/asm/signal.h
+++ b/arch/sw_64/include/asm/signal.h
@@ -21,4 +21,4 @@ struct odd_sigaction {
 };
 
 #include <asm/sigcontext.h>
-#endif
+#endif /* _ASM_SW64_SIGNAL_H */
diff --git a/arch/sw_64/include/asm/smp.h b/arch/sw_64/include/asm/smp.h
index e7aa742f73f0..0573361dc840 100644
--- a/arch/sw_64/include/asm/smp.h
+++ b/arch/sw_64/include/asm/smp.h
@@ -178,4 +178,4 @@ static inline void send_ipi(int cpu, unsigned long type)
 
 #define reset_cpu(cpu)  send_ipi((cpu), II_RESET)
 
-#endif
+#endif /* _ASM_SW64_SMP_H */
diff --git a/arch/sw_64/include/asm/spinlock_types.h b/arch/sw_64/include/asm/spinlock_types.h
index 28f2183ced74..62e554e4f48c 100644
--- a/arch/sw_64/include/asm/spinlock_types.h
+++ b/arch/sw_64/include/asm/spinlock_types.h
@@ -5,4 +5,4 @@
 #include <asm-generic/qspinlock_types.h>
 #include <asm-generic/qrwlock_types.h>
 
-#endif
+#endif /* _ASM_SW64_SPINLOCK_TYPES_H */
diff --git a/arch/sw_64/include/asm/suspend.h b/arch/sw_64/include/asm/suspend.h
index de6d97a0aff6..521ab099f94b 100644
--- a/arch/sw_64/include/asm/suspend.h
+++ b/arch/sw_64/include/asm/suspend.h
@@ -1,6 +1,6 @@
 /* SPDX-License-Identifier: GPL-2.0 */
-#ifndef _ASM_SW64_SLEEP_H
-#define _ASM_SW64_SLEEP_H
+#ifndef _ASM_SW64_SUSPEND_H
+#define _ASM_SW64_SUSPEND_H
 
 #include <asm/hmcall.h>
 #include <asm/ptrace.h>
@@ -45,4 +45,4 @@ struct processor_state {
 };
 
 extern void sw64_suspend_deep_sleep(struct processor_state *state);
-#endif /* _ASM_SW64_SLEEP_H */
+#endif /* _ASM_SW64_SUSPEND_H */
diff --git a/arch/sw_64/include/asm/sw64_init.h b/arch/sw_64/include/asm/sw64_init.h
index 9f16bdf2a61a..aae82f4163e0 100644
--- a/arch/sw_64/include/asm/sw64_init.h
+++ b/arch/sw_64/include/asm/sw64_init.h
@@ -1,6 +1,6 @@
 /* SPDX-License-Identifier: GPL-2.0 */
-#ifndef _ASM_SW64_INIT_H
-#define _ASM_SW64_INIT_H
+#ifndef _ASM_SW64_SW64_INIT_H
+#define _ASM_SW64_SW64_INIT_H
 
 #include <linux/cpu.h>
 #include <linux/pci.h>
@@ -43,4 +43,4 @@ extern struct sw64_chip_init_ops *sw64_chip_init;
 
 DECLARE_PER_CPU(unsigned long, hard_node_id);
 
-#endif /* _ASM_SW64_INIT_H */
+#endif /* _ASM_SW64_SW64_INIT_H */
diff --git a/arch/sw_64/include/asm/sw64io.h b/arch/sw_64/include/asm/sw64io.h
index 7d79a5b75090..0892356b8e6b 100644
--- a/arch/sw_64/include/asm/sw64io.h
+++ b/arch/sw_64/include/asm/sw64io.h
@@ -95,4 +95,4 @@ sw64_io_write(unsigned long node, unsigned long reg, unsigned long data)
 	addr = __va(SW64_IO_BASE(node) | reg);
 	writeq(data, addr);
 }
-#endif
+#endif /* _ASM_SW64_SW64IO_H */
diff --git a/arch/sw_64/include/asm/tc.h b/arch/sw_64/include/asm/tc.h
index f995a2a75f85..aa39c3528e3f 100644
--- a/arch/sw_64/include/asm/tc.h
+++ b/arch/sw_64/include/asm/tc.h
@@ -13,4 +13,4 @@ static inline unsigned long rdtc(void)
 extern void tc_sync_clear(void);
 extern void tc_sync_ready(void *ignored);
 extern void tc_sync_set(void);
-#endif
+#endif /* _ASM_SW64_TC_H */
diff --git a/arch/sw_64/include/asm/timex.h b/arch/sw_64/include/asm/timex.h
index 9065e39a0466..235197b0d1fd 100644
--- a/arch/sw_64/include/asm/timex.h
+++ b/arch/sw_64/include/asm/timex.h
@@ -21,4 +21,4 @@ static inline cycles_t get_cycles(void)
 	return rdtc();
 }
 
-#endif
+#endif /* _ASM_SW64_TIMEX_H */
diff --git a/arch/sw_64/include/asm/tlb.h b/arch/sw_64/include/asm/tlb.h
index 4902624dba88..67ce55fc4c43 100644
--- a/arch/sw_64/include/asm/tlb.h
+++ b/arch/sw_64/include/asm/tlb.h
@@ -15,4 +15,4 @@
 
 #define __pud_free_tlb(tlb, pud, address)	pud_free((tlb)->mm, pud)
 
-#endif
+#endif /* _ASM_SW64_TLB_H */
diff --git a/arch/sw_64/include/asm/wrperfmon.h b/arch/sw_64/include/asm/wrperfmon.h
index 15f7f6beb07c..c06a05121a68 100644
--- a/arch/sw_64/include/asm/wrperfmon.h
+++ b/arch/sw_64/include/asm/wrperfmon.h
@@ -61,4 +61,4 @@
 #define MAX_HWEVENTS			2
 #define PMC_COUNT_MASK			((1UL << 58) - 1)
 
-#endif
+#endif /* _ASM_SW64_WRPERFMON_H */
diff --git a/arch/sw_64/include/asm/xchg.h b/arch/sw_64/include/asm/xchg.h
index bac67623da91..ba4e6d1a27ad 100644
--- a/arch/sw_64/include/asm/xchg.h
+++ b/arch/sw_64/include/asm/xchg.h
@@ -1,7 +1,10 @@
 /* SPDX-License-Identifier: GPL-2.0 */
+#ifndef _ASM_SW64_XCHG_H
+#define _ASM_SW64_XCHG_H
+
 #ifndef _ASM_SW64_CMPXCHG_H
-#error Do not include xchg.h directly!
-#else
+#error Do not include xchg.h directly. Use cmpxchg.h
+#endif
 /*
  * xchg/xchg_local and cmpxchg/cmpxchg_local share the same code
  * except that local version do not have the expensive memory barrier.
@@ -325,4 +328,4 @@ static __always_inline unsigned long ____cmpxchg(, volatile void *ptr,
 	return old;
 }
 
-#endif
+#endif /* _ASM_SW64_XCHG_H */
diff --git a/arch/sw_64/include/asm/xor.h b/arch/sw_64/include/asm/xor.h
index af95259ed8ef..e9731f2a8f12 100644
--- a/arch/sw_64/include/asm/xor.h
+++ b/arch/sw_64/include/asm/xor.h
@@ -844,4 +844,4 @@ static struct xor_block_template xor_block_sw64_prefetch = {
  */
 #define XOR_SELECT_TEMPLATE(FASTEST)   (&xor_block_sw64_prefetch)
 
-#endif
+#endif /* _ASM_SW64_XOR_H */
diff --git a/arch/sw_64/include/uapi/asm/errno.h b/arch/sw_64/include/uapi/asm/errno.h
index 94e1eab5d003..969ee99ee86c 100644
--- a/arch/sw_64/include/uapi/asm/errno.h
+++ b/arch/sw_64/include/uapi/asm/errno.h
@@ -125,4 +125,4 @@
 
 #define EHWPOISON	139	/* Memory page has hardware error */
 
-#endif
+#endif /* _UAPI_ASM_SW64_ERRNO_H */
diff --git a/arch/sw_64/include/uapi/asm/fcntl.h b/arch/sw_64/include/uapi/asm/fcntl.h
index 99e1a31c5e86..be2daae2cc4d 100644
--- a/arch/sw_64/include/uapi/asm/fcntl.h
+++ b/arch/sw_64/include/uapi/asm/fcntl.h
@@ -55,4 +55,4 @@
 
 #include <asm-generic/fcntl.h>
 
-#endif
+#endif /* _UAPI_ASM_SW64_FCNTL_H */
diff --git a/arch/sw_64/include/uapi/asm/hmcall.h b/arch/sw_64/include/uapi/asm/hmcall.h
index dcff778e1616..6867fb7b4d24 100644
--- a/arch/sw_64/include/uapi/asm/hmcall.h
+++ b/arch/sw_64/include/uapi/asm/hmcall.h
@@ -14,4 +14,4 @@
 #define HMC_gentrap		0xAA
 #define HMC_wrperfmon		0xB0
 
-#endif
+#endif /* _UAPI_ASM_SW64_HMCALL_H */
diff --git a/arch/sw_64/include/uapi/asm/perf_regs.h b/arch/sw_64/include/uapi/asm/perf_regs.h
index 1378a7397951..febde5fd72fb 100644
--- a/arch/sw_64/include/uapi/asm/perf_regs.h
+++ b/arch/sw_64/include/uapi/asm/perf_regs.h
@@ -1,7 +1,7 @@
 /* SPDX-License-Identifier: GPL-2.0 WITH Linux-syscall-note */
 
-#ifndef _ASM_SW64_PERF_REGS_H
-#define _ASM_SW64_PERF_REGS_H
+#ifndef _UAPI_ASM_SW64_PERF_REGS_H
+#define _UAPI_ASM_SW64_PERF_REGS_H
 
 enum perf_event_sw64_regs {
 	PERF_REG_SW64_R0,
@@ -42,4 +42,4 @@ enum perf_event_sw64_regs {
 	PERF_REG_SW64_R18,
 	PERF_REG_SW64_MAX,
 };
-#endif /* _ASM_SW64_PERF_REGS_H */
+#endif /* _UAPI_ASM_SW64_PERF_REGS_H */
diff --git a/arch/sw_64/include/uapi/asm/setup.h b/arch/sw_64/include/uapi/asm/setup.h
index 10ce5dba9c30..e6cca4525049 100644
--- a/arch/sw_64/include/uapi/asm/setup.h
+++ b/arch/sw_64/include/uapi/asm/setup.h
@@ -4,4 +4,4 @@
 
 #define COMMAND_LINE_SIZE   2048
 
-#endif
+#endif /* _UAPI_ASM_SW64_SETUP_H */
diff --git a/arch/sw_64/include/uapi/asm/sigcontext.h b/arch/sw_64/include/uapi/asm/sigcontext.h
index 11d7eece86ef..08a081470383 100644
--- a/arch/sw_64/include/uapi/asm/sigcontext.h
+++ b/arch/sw_64/include/uapi/asm/sigcontext.h
@@ -31,4 +31,4 @@ struct sigcontext {
 };
 
 
-#endif
+#endif /* _UAPI_ASM_SW64_SIGCONTEXT_H */
diff --git a/arch/sw_64/include/uapi/asm/siginfo.h b/arch/sw_64/include/uapi/asm/siginfo.h
index 4a58eea9b67c..28c656c28313 100644
--- a/arch/sw_64/include/uapi/asm/siginfo.h
+++ b/arch/sw_64/include/uapi/asm/siginfo.h
@@ -8,4 +8,4 @@
 #include <asm-generic/siginfo.h>
 
 
-#endif
+#endif /* _UAPI_ASM_SW64_SIGINFO_H */
diff --git a/arch/sw_64/include/uapi/asm/stat.h b/arch/sw_64/include/uapi/asm/stat.h
index d2b21128c569..25aad21f4d31 100644
--- a/arch/sw_64/include/uapi/asm/stat.h
+++ b/arch/sw_64/include/uapi/asm/stat.h
@@ -48,4 +48,4 @@ struct stat64 {
 	long		__unused[3];
 };
 
-#endif
+#endif /* _UAPI_ASM_SW64_STAT_H */
diff --git a/arch/sw_64/kernel/pci_impl.h b/arch/sw_64/kernel/pci_impl.h
index 41d83a41db56..4262ba94f44b 100644
--- a/arch/sw_64/kernel/pci_impl.h
+++ b/arch/sw_64/kernel/pci_impl.h
@@ -25,4 +25,4 @@ extern const struct dma_map_ops sw64_dma_direct_ops;
 
 extern struct cma *sw64_kvm_cma;
 extern struct gen_pool *sw64_kvm_pool;
-#endif
+#endif /* _SW64_KERNEL_PCI_IMPL_H */
diff --git a/arch/sw_64/kernel/proto.h b/arch/sw_64/kernel/proto.h
index 8c31eca3cc32..f908263f925a 100644
--- a/arch/sw_64/kernel/proto.h
+++ b/arch/sw_64/kernel/proto.h
@@ -19,4 +19,4 @@ extern void __init setup_sched_clock(void);
 extern void __init sw64_sched_clock_init(void);
 #endif
 
-#endif /* _SW64_PROTO_H */
+#endif /* _SW64_KERNEL_PROTO_H */
diff --git a/arch/sw_64/kvm/irq.h b/arch/sw_64/kvm/irq.h
index ee56d9b97632..9268ab6af492 100644
--- a/arch/sw_64/kvm/irq.h
+++ b/arch/sw_64/kvm/irq.h
@@ -3,10 +3,10 @@
  * irq.h: in kernel interrupt controller related definitions
  */
 
-#ifndef __IRQ_H
-#define __IRQ_H
+#ifndef _SW64_KVM_IRQ_H
+#define _SW64_KVM_IRQ_H
 static inline int irqchip_in_kernel(struct kvm *kvm)
 {
 	return 1;
 }
-#endif
+#endif /* _SW64_KVM_IRQ_H */
diff --git a/arch/sw_64/math-emu/sfp-util.h b/arch/sw_64/math-emu/sfp-util.h
index 63f9685999f3..0769c0223e0d 100644
--- a/arch/sw_64/math-emu/sfp-util.h
+++ b/arch/sw_64/math-emu/sfp-util.h
@@ -1,4 +1,7 @@
 /* SPDX-License-Identifier: GPL-2.0 */
+#ifndef _SW64_MATH_EMU_SFP_UTIL_H
+#define _SW64_MATH_EMU_SFP_UTIL_H
+
 #include <linux/kernel.h>
 #include <linux/sched.h>
 #include <linux/types.h>
@@ -34,3 +37,5 @@ extern unsigned long __udiv_qrnnd(unsigned long *, unsigned long,
 #define __LITTLE_ENDIAN -1
 #endif
 #define __BYTE_ORDER __LITTLE_ENDIAN
+
+#endif /* _SW64_MATH_EMU_SFP_UTIL_H */
diff --git a/arch/sw_64/net/bpf_jit.h b/arch/sw_64/net/bpf_jit.h
index 2cf5ba5253a8..929036d8ea6b 100644
--- a/arch/sw_64/net/bpf_jit.h
+++ b/arch/sw_64/net/bpf_jit.h
@@ -18,8 +18,8 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-#ifndef _SW64_BPF_JIT_H
-#define _SW64_BPF_JIT_H
+#ifndef _SW64_NET_BPF_JIT_H
+#define _SW64_NET_BPF_JIT_H
 
 /* SW64 instruction field shift */
 #define SW64_BPF_OPCODE_OFFSET		26
@@ -365,4 +365,4 @@ enum sw64_bpf_registers {
 	sw64_bpf_gen_format_simple_alu_imm(SW64_BPF_OPCODE_ALU_IMM, \
 			ra, imm8, dst, SW64_BPF_FUNC_ALU_CMPULE)
 
-#endif /* _SW64_BPF_JIT_H */
+#endif /* _SW64_NET_BPF_JIT_H */
diff --git a/arch/sw_64/oprofile/op_impl.h b/arch/sw_64/oprofile/op_impl.h
index 10bdd455c3dd..e8714cb7c2ea 100644
--- a/arch/sw_64/oprofile/op_impl.h
+++ b/arch/sw_64/oprofile/op_impl.h
@@ -53,4 +53,4 @@ struct op_axp_model {
 	unsigned char can_set_proc_mode;
 };
 
-#endif
+#endif /* _SW64_OPROFILE_OP_IMPL_H */
diff --git a/arch/sw_64/tools/relocs.h b/arch/sw_64/tools/relocs.h
index 7273ccaed11f..37ac09ec2a77 100644
--- a/arch/sw_64/tools/relocs.h
+++ b/arch/sw_64/tools/relocs.h
@@ -1,6 +1,6 @@
 /* SPDX-License-Identifier: GPL-2.0 */
-#ifndef RELOCS_H
-#define RELOCS_H
+#ifndef _SW64_TOOLS_RELOCS_H
+#define _SW64_TOOLS_RELOCS_H
 
 #include <stdio.h>
 #include <stdarg.h>
@@ -68,4 +68,4 @@ enum symtype {
 
 void process(FILE *fp, int as_text, int as_bin,
 		int show_reloc_info, int keep_relocs);
-#endif /* RELOCS_H */
+#endif /* _SW64_TOOLS_RELOCS_H */
-- 
2.33.0

