From 927e8e16d604582a095d7c0ae9714f8050f0205d Mon Sep 17 00:00:00 2001
From: He Sheng <hesheng@wxiat.com>
Date: Fri, 6 May 2022 10:00:14 +0800
Subject: [PATCH] sw64: kapi: generate some kapi headers from generic ones
Patch-mainline: Not yet, from openEuler
References: bsn#22
openEuler-commit: 927e8e16d604582a095d7c0ae9714f8050f0205d
Modified-by-SEL: No


Sunway inclusion
category: feature
bugzilla: https://gitee.com/openeuler/kernel/issues/I56OLG

--------------------------------

These kapi headers are proved to be the same with generic version.

Signed-off-by: He Sheng <hesheng@wxiat.com>

Signed-off-by: Gu Zitao <guzitao@wxiat.com>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 arch/sw_64/include/asm/Kbuild              |   7 +-
 arch/sw_64/include/asm/div64.h             |   7 --
 arch/sw_64/include/asm/emergency-restart.h |   7 --
 arch/sw_64/include/asm/exec.h              |   7 --
 arch/sw_64/include/asm/irq_regs.h          |   7 --
 arch/sw_64/include/asm/kmap_types.h        |  15 ---
 arch/sw_64/include/asm/local.h             | 125 ---------------------
 arch/sw_64/include/asm/local64.h           |   7 --
 arch/sw_64/include/asm/param.h             |  11 --
 arch/sw_64/include/asm/parport.h           |  19 ----
 arch/sw_64/include/asm/preempt.h           |   7 --
 arch/sw_64/include/asm/seccomp.h           |  15 ---
 arch/sw_64/include/asm/sections.h          |   8 --
 arch/sw_64/include/asm/segment.h           |   7 --
 arch/sw_64/include/asm/serial.h            |  16 ---
 arch/sw_64/include/asm/shmparam.h          |   7 --
 arch/sw_64/include/asm/trace_clock.h       |  10 --
 arch/sw_64/include/asm/types.h             |   7 --
 arch/sw_64/include/asm/unaligned.h         |  12 --
 19 files changed, 6 insertions(+), 295 deletions(-)
 delete mode 100644 arch/sw_64/include/asm/div64.h
 delete mode 100644 arch/sw_64/include/asm/emergency-restart.h
 delete mode 100644 arch/sw_64/include/asm/exec.h
 delete mode 100644 arch/sw_64/include/asm/irq_regs.h
 delete mode 100644 arch/sw_64/include/asm/kmap_types.h
 delete mode 100644 arch/sw_64/include/asm/local.h
 delete mode 100644 arch/sw_64/include/asm/local64.h
 delete mode 100644 arch/sw_64/include/asm/param.h
 delete mode 100644 arch/sw_64/include/asm/parport.h
 delete mode 100644 arch/sw_64/include/asm/preempt.h
 delete mode 100644 arch/sw_64/include/asm/seccomp.h
 delete mode 100644 arch/sw_64/include/asm/sections.h
 delete mode 100644 arch/sw_64/include/asm/segment.h
 delete mode 100644 arch/sw_64/include/asm/serial.h
 delete mode 100644 arch/sw_64/include/asm/shmparam.h
 delete mode 100644 arch/sw_64/include/asm/trace_clock.h
 delete mode 100644 arch/sw_64/include/asm/types.h
 delete mode 100644 arch/sw_64/include/asm/unaligned.h

diff --git a/arch/sw_64/include/asm/Kbuild b/arch/sw_64/include/asm/Kbuild
index a94a978edf3e..d08f0b08918e 100644
--- a/arch/sw_64/include/asm/Kbuild
+++ b/arch/sw_64/include/asm/Kbuild
@@ -3,10 +3,15 @@
 generic-y += clkdev.h
 generic-y += export.h
 generic-y += kvm_types.h
+generic-y += local64.h
 generic-y += mcs_spinlock.h
+generic-y += param.h
 generic-y += qrwlock.h
 generic-y += qspinlock.h
 generic-y += rwsem.h
-generic-y += scatterlist.h
+generic-y += seccomp.h
+generic-y += segment.h
+generic-y += types.h
 generic-y += user.h
+
 generated-y += syscall_table.h
diff --git a/arch/sw_64/include/asm/div64.h b/arch/sw_64/include/asm/div64.h
deleted file mode 100644
index 306581407ba5..000000000000
--- a/arch/sw_64/include/asm/div64.h
+++ /dev/null
@@ -1,7 +0,0 @@
-/* SPDX-License-Identifier: GPL-2.0 */
-#ifndef _ASM_SW64_DIV64_H
-#define _ASM_SW64_DIV64_H
-
-#include <asm-generic/div64.h>
-
-#endif
diff --git a/arch/sw_64/include/asm/emergency-restart.h b/arch/sw_64/include/asm/emergency-restart.h
deleted file mode 100644
index fabb33ebf0eb..000000000000
--- a/arch/sw_64/include/asm/emergency-restart.h
+++ /dev/null
@@ -1,7 +0,0 @@
-/* SPDX-License-Identifier: GPL-2.0 */
-#ifndef _ASM_SW64_EMERGENCY_RESTART_H
-#define _ASM_SW64_EMERGENCY_RESTART_H
-
-#include <asm-generic/emergency-restart.h>
-
-#endif /* _ASM_SW64_EMERGENCY_RESTART_H */
diff --git a/arch/sw_64/include/asm/exec.h b/arch/sw_64/include/asm/exec.h
deleted file mode 100644
index 4a9cb71c5c47..000000000000
--- a/arch/sw_64/include/asm/exec.h
+++ /dev/null
@@ -1,7 +0,0 @@
-/* SPDX-License-Identifier: GPL-2.0 */
-#ifndef _ASM_SW64_EXEC_H
-#define _ASM_SW64_EXEC_H
-
-#define arch_align_stack(x) (x)
-
-#endif /* _ASM_SW64_EXEC_H */
diff --git a/arch/sw_64/include/asm/irq_regs.h b/arch/sw_64/include/asm/irq_regs.h
deleted file mode 100644
index bba48f36a40f..000000000000
--- a/arch/sw_64/include/asm/irq_regs.h
+++ /dev/null
@@ -1,7 +0,0 @@
-/* SPDX-License-Identifier: GPL-2.0 */
-#ifndef _ASM_SW64_IRQ_REGS_H
-#define _ASM_SW64_IRQ_REGS_H
-
-#include <asm-generic/irq_regs.h>
-
-#endif
diff --git a/arch/sw_64/include/asm/kmap_types.h b/arch/sw_64/include/asm/kmap_types.h
deleted file mode 100644
index 8e86b08dee94..000000000000
--- a/arch/sw_64/include/asm/kmap_types.h
+++ /dev/null
@@ -1,15 +0,0 @@
-/* SPDX-License-Identifier: GPL-2.0 */
-#ifndef _ASM_SW64_KMAP_TYPES_H
-#define _ASM_SW64_KMAP_TYPES_H
-
-/* Dummy header just to define km_type. */
-
-#ifdef CONFIG_DEBUG_HIGHMEM
-#define  __WITH_KM_FENCE
-#endif
-
-#include <asm-generic/kmap_types.h>
-
-#undef __WITH_KM_FENCE
-
-#endif
diff --git a/arch/sw_64/include/asm/local.h b/arch/sw_64/include/asm/local.h
deleted file mode 100644
index 9144600f641d..000000000000
--- a/arch/sw_64/include/asm/local.h
+++ /dev/null
@@ -1,125 +0,0 @@
-/* SPDX-License-Identifier: GPL-2.0 */
-#ifndef _ASM_SW64_LOCAL_H
-#define _ASM_SW64_LOCAL_H
-
-#include <linux/percpu.h>
-#include <linux/atomic.h>
-
-typedef struct {
-	atomic_long_t a;
-} local_t;
-
-#define LOCAL_INIT(i)	{ ATOMIC_LONG_INIT(i) }
-#define local_read(l)	atomic_long_read(&(l)->a)
-#define local_set(l, i)	atomic_long_set(&(l)->a, (i))
-#define local_inc(l)	atomic_long_inc(&(l)->a)
-#define local_dec(l)	atomic_long_dec(&(l)->a)
-#define local_add(i, l)	atomic_long_add((i), (&(l)->a))
-#define local_sub(i, l)	atomic_long_sub((i), (&(l)->a))
-
-static inline long local_add_return(long i, local_t *l)
-{
-	long temp1, temp2, result, addr;
-
-	__asm__ __volatile__(
-#ifdef CONFIG_LOCK_MEMB
-	"	memb\n"
-#endif
-	"	ldi  %4, %2\n"
-	"1:	lldl %0, 0(%4)\n"
-	"	ldi  %1, 1\n"
-	"	wr_f %1\n"
-	"	addl %0, %5, %3\n"
-	"	addl %0, %5, %0\n"
-#ifdef CONFIG_LOCK_FIXUP
-	"	memb\n"
-#endif
-	"	lstl %0, 0(%4)\n"
-	"	rd_f %0\n"
-	"	beq %0, 2f\n"
-	".subsection 2\n"
-	"2:	br 1b\n"
-	".previous"
-	: "=&r" (temp1), "=&r" (temp2), "=m" (l->a.counter),
-	  "=&r" (result), "=&r" (addr)
-	: "Ir" (i), "m" (l->a.counter) : "memory");
-	return result;
-}
-
-static inline long local_sub_return(long i, local_t *l)
-{
-	long temp1, temp2, result, addr;
-
-	__asm__ __volatile__(
-#ifdef CONFIG_LOCK_MEMB
-	"	memb\n"
-#endif
-	"	ldi  %4, %2\n"
-	"1:	lldl %0, 0(%4)\n"
-	"	ldi  %1, 1\n"
-	"	wr_f %1\n"
-	"	subl %0, %5, %3\n"
-	"	subl %0, %5, %0\n"
-#ifdef CONFIG_LOCK_FIXUP
-	"       memb\n"
-#endif
-	"	lstl %0, 0(%4)\n"
-	"	rd_f %0\n"
-	"	beq %0, 2f\n"
-	".subsection 2\n"
-	"2:	br 1b\n"
-	".previous"
-	: "=&r" (temp1), "=&r" (temp2), "=m" (l->a.counter),
-	  "=&r" (result), "=&r" (addr)
-	: "Ir" (i), "m" (l->a.counter) : "memory");
-	return result;
-}
-
-#define local_cmpxchg(l, o, n) \
-	(cmpxchg_local(&((l)->a.counter), (o), (n)))
-#define local_xchg(l, n) (xchg_local(&((l)->a.counter), (n)))
-
-/**
- * local_add_unless - add unless the number is a given value
- * @l: pointer of type local_t
- * @a: the amount to add to l...
- * @u: ...unless l is equal to u.
- *
- * Atomically adds @a to @l, so long as it was not @u.
- * Returns non-zero if @l was not @u, and zero otherwise.
- */
-#define local_add_unless(l, a, u)				\
-({								\
-	long c, old;						\
-	c = local_read(l);					\
-	for (;;) {						\
-		if (unlikely(c == (u)))				\
-			break;					\
-		old = local_cmpxchg((l), c, c + (a));	\
-		if (likely(old == c))				\
-			break;					\
-		c = old;					\
-	}							\
-	c != (u);						\
-})
-#define local_inc_not_zero(l) local_add_unless((l), 1, 0)
-
-#define local_add_negative(a, l) (local_add_return((a), (l)) < 0)
-
-#define local_dec_return(l) local_sub_return(1, (l))
-
-#define local_inc_return(l) local_add_return(1, (l))
-
-#define local_sub_and_test(i, l) (local_sub_return((i), (l)) == 0)
-
-#define local_inc_and_test(l) (local_add_return(1, (l)) == 0)
-
-#define local_dec_and_test(l) (local_sub_return(1, (l)) == 0)
-
-/* Verify if faster than atomic ops */
-#define __local_inc(l)		((l)->a.counter++)
-#define __local_dec(l)		((l)->a.counter++)
-#define __local_add(i, l)	((l)->a.counter += (i))
-#define __local_sub(i, l)	((l)->a.counter -= (i))
-
-#endif /* _ASM_SW64_LOCAL_H */
diff --git a/arch/sw_64/include/asm/local64.h b/arch/sw_64/include/asm/local64.h
deleted file mode 100644
index 4278133cd8fa..000000000000
--- a/arch/sw_64/include/asm/local64.h
+++ /dev/null
@@ -1,7 +0,0 @@
-/* SPDX-License-Identifier: GPL-2.0 */
-#ifndef _ASM_SW64_LOCAL64_H
-#define _ASM_SW64_LOCAL64_H
-
-#include <asm-generic/local64.h>
-
-#endif
diff --git a/arch/sw_64/include/asm/param.h b/arch/sw_64/include/asm/param.h
deleted file mode 100644
index 49c5d03a3370..000000000000
--- a/arch/sw_64/include/asm/param.h
+++ /dev/null
@@ -1,11 +0,0 @@
-/* SPDX-License-Identifier: GPL-2.0 */
-#ifndef _ASM_SW64_PARAM_H
-#define _ASM_SW64_PARAM_H
-
-#include <uapi/asm/param.h>
-
-#undef HZ
-#define HZ		CONFIG_HZ
-#define USER_HZ		100
-#define CLOCKS_PER_SEC	USER_HZ	/* frequency at which times() counts */
-#endif /* _ASM_SW64_PARAM_H */
diff --git a/arch/sw_64/include/asm/parport.h b/arch/sw_64/include/asm/parport.h
deleted file mode 100644
index 82b9a219b797..000000000000
--- a/arch/sw_64/include/asm/parport.h
+++ /dev/null
@@ -1,19 +0,0 @@
-/* SPDX-License-Identifier: GPL-2.0 */
-/*
- * parport.h: platform-specific PC-style parport initialisation
- *
- * Copyright (C) 1999, 2000  Tim Waugh <tim@cyberelk.demon.co.uk>
- *
- * This file should only be included by drivers/parport/parport_pc.c.
- */
-
-#ifndef _ASM_SW64_PARPORT_H
-#define _ASM_SW64_PARPORT_H
-
-static int parport_pc_find_isa_ports(int autoirq, int autodma);
-static int parport_pc_find_nonpci_ports(int autoirq, int autodma)
-{
-	return parport_pc_find_isa_ports(autoirq, autodma);
-}
-
-#endif /* !(_ASM_SW64_PARPORT_H) */
diff --git a/arch/sw_64/include/asm/preempt.h b/arch/sw_64/include/asm/preempt.h
deleted file mode 100644
index dc6643a43766..000000000000
--- a/arch/sw_64/include/asm/preempt.h
+++ /dev/null
@@ -1,7 +0,0 @@
-/* SPDX-License-Identifier: GPL-2.0 */
-#ifndef _ASM_SW64_PREEMPT_H
-#define _ASM_SW64_PREEMPT_H
-
-#include <asm-generic/preempt.h>
-
-#endif /* _ASM_SW64_PREEMPT_H */
diff --git a/arch/sw_64/include/asm/seccomp.h b/arch/sw_64/include/asm/seccomp.h
deleted file mode 100644
index db2f298862c3..000000000000
--- a/arch/sw_64/include/asm/seccomp.h
+++ /dev/null
@@ -1,15 +0,0 @@
-/* SPDX-License-Identifier: GPL-2.0 */
-/*
- * arch/sw_64/include/asm/seccomp.h
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License version 2 as
- * published by the Free Software Foundation.
- */
-#ifndef _ASM_SW64_SECCOMP_H
-#define _ASM_SW64_SECCOMP_H
-
-#include <asm/unistd.h>
-#include <asm-generic/seccomp.h>
-
-#endif /* _ASM_SW64_SECCOMP_H */
diff --git a/arch/sw_64/include/asm/sections.h b/arch/sw_64/include/asm/sections.h
deleted file mode 100644
index 37dab4fde720..000000000000
--- a/arch/sw_64/include/asm/sections.h
+++ /dev/null
@@ -1,8 +0,0 @@
-/* SPDX-License-Identifier: GPL-2.0 */
-#ifndef _ASM_SW64_SECTIONS_H
-#define _ASM_SW64_SECTIONS_H
-
-/* nothing to see, move along */
-#include <asm-generic/sections.h>
-
-#endif
diff --git a/arch/sw_64/include/asm/segment.h b/arch/sw_64/include/asm/segment.h
deleted file mode 100644
index dc90357765e5..000000000000
--- a/arch/sw_64/include/asm/segment.h
+++ /dev/null
@@ -1,7 +0,0 @@
-/* SPDX-License-Identifier: GPL-2.0 */
-#ifndef _ASM_SW64_SEGMENT_H
-#define _ASM_SW64_SEGMENT_H
-
-/* Only here because we have some old header files that expect it.. */
-
-#endif
diff --git a/arch/sw_64/include/asm/serial.h b/arch/sw_64/include/asm/serial.h
deleted file mode 100644
index 059e603642b9..000000000000
--- a/arch/sw_64/include/asm/serial.h
+++ /dev/null
@@ -1,16 +0,0 @@
-/* SPDX-License-Identifier: GPL-2.0 */
-#ifndef _ASM_SW64_SERIAL_H
-#define _ASM_SW64_SERIAL_H
-
-#define BASE_BAUD (1843200 / 16)
-
-/* Standard COM flags (except for COM4, because of the 8514 problem) */
-#ifdef CONFIG_SERIAL_8250_DETECT_IRQ
-#define STD_COM_FLAGS (UPF_BOOT_AUTOCONF | UPF_SKIP_TEST | UPF_AUTO_IRQ)
-#define STD_COM4_FLAGS (UPF_BOOT_AUTOCONF | UPF_AUTO_IRQ)
-#else
-#define STD_COM_FLAGS (UPF_BOOT_AUTOCONF | UPF_SKIP_TEST)
-#define STD_COM4_FLAGS UPF_BOOT_AUTOCONF
-#endif
-
-#endif /* _ASM_SW64_SERIAL_H */
diff --git a/arch/sw_64/include/asm/shmparam.h b/arch/sw_64/include/asm/shmparam.h
deleted file mode 100644
index 15f71533b1ed..000000000000
--- a/arch/sw_64/include/asm/shmparam.h
+++ /dev/null
@@ -1,7 +0,0 @@
-/* SPDX-License-Identifier: GPL-2.0 */
-#ifndef _ASM_SW64_SHMPARAM_H
-#define _ASM_SW64_SHMPARAM_H
-
-#define	SHMLBA PAGE_SIZE		 /* attach addr a multiple of this */
-
-#endif /* _ASM_SW64_SHMPARAM_H */
diff --git a/arch/sw_64/include/asm/trace_clock.h b/arch/sw_64/include/asm/trace_clock.h
deleted file mode 100644
index 57324215a837..000000000000
--- a/arch/sw_64/include/asm/trace_clock.h
+++ /dev/null
@@ -1,10 +0,0 @@
-/* SPDX-License-Identifier: GPL-2.0 */
-#ifndef _ASM_SW64_TRACE_CLOCK_H
-#define _ASM_SW64_TRACE_CLOCK_H
-
-#include <linux/compiler.h>
-#include <linux/types.h>
-
-#define ARCH_TRACE_CLOCKS
-
-#endif  /* _ASM_SW64_TRACE_CLOCK_H */
diff --git a/arch/sw_64/include/asm/types.h b/arch/sw_64/include/asm/types.h
deleted file mode 100644
index 37d626269a02..000000000000
--- a/arch/sw_64/include/asm/types.h
+++ /dev/null
@@ -1,7 +0,0 @@
-/* SPDX-License-Identifier: GPL-2.0 */
-#ifndef _ASM_SW64_TYPES_H
-#define _ASM_SW64_TYPES_H
-
-#include <asm-generic/int-ll64.h>
-
-#endif /* _ASM_SW64_TYPES_H */
diff --git a/arch/sw_64/include/asm/unaligned.h b/arch/sw_64/include/asm/unaligned.h
deleted file mode 100644
index 91fdff923ce5..000000000000
--- a/arch/sw_64/include/asm/unaligned.h
+++ /dev/null
@@ -1,12 +0,0 @@
-/* SPDX-License-Identifier: GPL-2.0 */
-#ifndef _ASM_SW64_UNALIGNED_H
-#define _ASM_SW64_UNALIGNED_H
-
-#include <linux/unaligned/le_struct.h>
-#include <linux/unaligned/be_byteshift.h>
-#include <linux/unaligned/generic.h>
-
-#define get_unaligned __get_unaligned_le
-#define put_unaligned __put_unaligned_le
-
-#endif /* _ASM_SW64_UNALIGNED_H */
-- 
2.33.0

