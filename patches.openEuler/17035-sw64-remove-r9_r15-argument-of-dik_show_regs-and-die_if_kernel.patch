From cf8d42cc0e6dc5fe55895a233aa95418a157145c Mon Sep 17 00:00:00 2001
From: He Sheng <hesheng@wxiat.com>
Date: Sun, 24 Apr 2022 09:11:52 +0800
Subject: [PATCH] sw64: remove r9_r15 argument of dik_show_regs and
 die_if_kernel
Patch-mainline: Not yet, from openEuler
References: bsn#22
openEuler-commit: cf8d42cc0e6dc5fe55895a233aa95418a157145c
Modified-by-SEL: No


Sunway inclusion
category: feature
bugzilla: https://gitee.com/openeuler/kernel/issues/I5GF7A

--------------------------------

Signed-off-by: He Sheng <hesheng@wxiat.com>

Signed-off-by: Gu Zitao <guzitao@wxiat.com>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 arch/sw_64/kernel/process.c |  2 +-
 arch/sw_64/kernel/proto.h   |  4 ++--
 arch/sw_64/kernel/ptrace.c  |  2 +-
 arch/sw_64/kernel/traps.c   | 27 ++++++++++++---------------
 arch/sw_64/mm/fault.c       |  8 ++++----
 arch/sw_64/mm/init.c        |  2 --
 6 files changed, 20 insertions(+), 25 deletions(-)

diff --git a/arch/sw_64/kernel/process.c b/arch/sw_64/kernel/process.c
index c6e87874af19..9a6812851b15 100644
--- a/arch/sw_64/kernel/process.c
+++ b/arch/sw_64/kernel/process.c
@@ -110,7 +110,7 @@ void
 show_regs(struct pt_regs *regs)
 {
 	show_regs_print_info(KERN_DEFAULT);
-	dik_show_regs(regs, NULL);
+	dik_show_regs(regs);
 }
 
 /*
diff --git a/arch/sw_64/kernel/proto.h b/arch/sw_64/kernel/proto.h
index 9c99baaaf1d0..189074f8bd5c 100644
--- a/arch/sw_64/kernel/proto.h
+++ b/arch/sw_64/kernel/proto.h
@@ -12,8 +12,8 @@ extern int ptrace_set_bpt(struct task_struct *child);
 extern int ptrace_cancel_bpt(struct task_struct *child);
 
 /* traps.c */
-extern void dik_show_regs(struct pt_regs *regs, unsigned long *r9_15);
-extern void die_if_kernel(char *str, struct pt_regs *regs, long err, unsigned long *r9_15);
+extern void dik_show_regs(struct pt_regs *regs);
+extern void die_if_kernel(char *str, struct pt_regs *regs, long err);
 
 /* timer.c */
 extern void setup_timer(void);
diff --git a/arch/sw_64/kernel/ptrace.c b/arch/sw_64/kernel/ptrace.c
index b06c98e9944b..3b29ff7114f7 100644
--- a/arch/sw_64/kernel/ptrace.c
+++ b/arch/sw_64/kernel/ptrace.c
@@ -521,7 +521,7 @@ int do_match(unsigned long address, unsigned long mmcsr, long cause, struct pt_r
 	case MMCSR__DA_MATCH:
 	case MMCSR__DV_MATCH:
 	case MMCSR__DAV_MATCH:
-		dik_show_regs(regs, (unsigned long *)regs-15);
+		dik_show_regs(regs);
 
 		if (!(current->ptrace & PT_PTRACED)) {
 			printk(" pid %d %s not be ptraced, return\n", current->pid, current->comm);
diff --git a/arch/sw_64/kernel/traps.c b/arch/sw_64/kernel/traps.c
index 99cee58e886d..b7c4e45df87b 100644
--- a/arch/sw_64/kernel/traps.c
+++ b/arch/sw_64/kernel/traps.c
@@ -22,8 +22,7 @@
 
 #include "proto.h"
 
-void
-dik_show_regs(struct pt_regs *regs, unsigned long *r9_15)
+void dik_show_regs(struct pt_regs *regs)
 {
 	printk("pc = [<%016lx>]  ra = [<%016lx>]  ps = %04lx    %s\n",
 	       regs->pc, regs->r26, regs->ps, print_tainted());
@@ -36,13 +35,12 @@ dik_show_regs(struct pt_regs *regs, unsigned long *r9_15)
 	printk("t5 = %016lx  t6 = %016lx  t7 = %016lx\n",
 	       regs->r6, regs->r7, regs->r8);
 
-	if (r9_15) {
-		printk("s0 = %016lx  s1 = %016lx  s2 = %016lx\n",
-		       r9_15[9], r9_15[10], r9_15[11]);
-		printk("s3 = %016lx  s4 = %016lx  s5 = %016lx\n",
-		       r9_15[12], r9_15[13], r9_15[14]);
-		printk("s6 = %016lx\n", r9_15[15]);
-	}
+	printk("s0 = %016lx  s1 = %016lx  s2 = %016lx\n",
+	       regs->r9, regs->r10, regs->r11);
+	printk("s3 = %016lx  s4 = %016lx  s5 = %016lx\n",
+	       regs->r12, regs->r13, regs->r14);
+	printk("s6 = %016lx\n",
+	       regs->r15);
 
 	printk("a0 = %016lx  a1 = %016lx  a2 = %016lx\n",
 	       regs->r16, regs->r17, regs->r18);
@@ -117,8 +115,7 @@ void show_stack(struct task_struct *task, unsigned long *sp, const char *loglvl)
 	dik_show_trace(sp, loglvl);
 }
 
-void
-die_if_kernel(char *str, struct pt_regs *regs, long err, unsigned long *r9_15)
+void die_if_kernel(char *str, struct pt_regs *regs, long err)
 {
 	if (regs->ps & 8)
 		return;
@@ -126,7 +123,7 @@ die_if_kernel(char *str, struct pt_regs *regs, long err, unsigned long *r9_15)
 	printk("CPU %d ", hard_smp_processor_id());
 #endif
 	printk("%s(%d): %s %ld\n", current->comm, task_pid_nr(current), str, err);
-	dik_show_regs(regs, r9_15);
+	dik_show_regs(regs);
 	add_taint(TAINT_DIE, LOCKDEP_NOW_UNRELIABLE);
 	dik_show_trace((unsigned long *)(regs+1), KERN_DEFAULT);
 	dik_show_code((unsigned int *)regs->pc);
@@ -178,7 +175,7 @@ do_entArith(unsigned long summary, unsigned long write_mask,
 		if (si_code == 0)
 			return;
 	}
-	die_if_kernel("Arithmetic fault", regs, 0, NULL);
+	die_if_kernel("Arithmetic fault", regs, 0);
 
 	force_sig_fault(SIGFPE, si_code, (void __user *)regs->pc, 0);
 }
@@ -205,7 +202,7 @@ do_entIF(unsigned long inst_type, struct pt_regs *regs)
 			return;
 		}
 		die_if_kernel((type == 1 ? "Kernel Bug" : "Instruction fault"),
-				regs, type, NULL);
+				regs, type);
 	}
 
 	switch (type) {
@@ -297,7 +294,7 @@ do_entIF(unsigned long inst_type, struct pt_regs *regs)
 				return;
 		}
 		if ((regs->ps & ~IPL_MAX) == 0)
-			die_if_kernel("Instruction fault", regs, type, NULL);
+			die_if_kernel("Instruction fault", regs, type);
 		break;
 
 	case 3: /* FEN fault */
diff --git a/arch/sw_64/mm/fault.c b/arch/sw_64/mm/fault.c
index b580450893ba..9562bc3ba37f 100644
--- a/arch/sw_64/mm/fault.c
+++ b/arch/sw_64/mm/fault.c
@@ -31,8 +31,8 @@ static inline int notify_page_fault(struct pt_regs *regs, unsigned long mmcsr)
 }
 #endif
 
-extern void die_if_kernel(char *, struct pt_regs *, long, unsigned long *);
-extern void dik_show_regs(struct pt_regs *regs, unsigned long *r9_15);
+extern void die_if_kernel(char *, struct pt_regs *, long);
+extern void dik_show_regs(struct pt_regs *regs);
 
 void show_all_vma(void)
 {
@@ -305,7 +305,7 @@ do_page_fault(unsigned long address, unsigned long mmcsr,
 	 */
 	pr_alert("Unable to handle kernel paging request at virtual address %016lx\n",
 	       address);
-	die_if_kernel("Oops", regs, cause, (unsigned long *)regs - 16);
+	die_if_kernel("Oops", regs, cause);
 	do_exit(SIGKILL);
 
 	/*
@@ -336,7 +336,7 @@ do_page_fault(unsigned long address, unsigned long mmcsr,
 	if (unlikely(segv_debug_enabled)) {
 		pr_info("fault: want to send_segv: pid %d, cause = %#lx, mmcsr = %#lx, address = %#lx, pc %#lx\n",
 				current->pid, cause, mmcsr, address, regs->pc);
-		dik_show_regs(regs, (unsigned long *)regs-16);
+		dik_show_regs(regs);
 		show_all_vma();
 	}
 
diff --git a/arch/sw_64/mm/init.c b/arch/sw_64/mm/init.c
index 7fcd3d834ba5..3593e4b13319 100644
--- a/arch/sw_64/mm/init.c
+++ b/arch/sw_64/mm/init.c
@@ -13,8 +13,6 @@
 
 #include <asm/mmu_context.h>
 
-extern void die_if_kernel(char *, struct pt_regs *, long);
-
 struct mem_desc_t mem_desc;
 #ifndef CONFIG_NUMA
 struct numa_node_desc_t numa_nodes_desc[1];
-- 
2.33.0

