From eee5d5872886372dd61c3f41f1040fa59b9432f1 Mon Sep 17 00:00:00 2001
From: He Sheng <hesheng@wxiat.com>
Date: Mon, 14 Nov 2022 11:30:16 +0800
Subject: [PATCH] sw64: fix argument type of __sw64_vcpu_run()
Patch-mainline: Not yet, from openEuler
References: bsn#22
openEuler-commit: eee5d5872886372dd61c3f41f1040fa59b9432f1
Modified-by-SEL: No


Sunway inclusion
category: feature
bugzilla: https://gitee.com/openeuler/kernel/issues/I56OLG

--------------------------------

The first argument of __sw64_vcpu_run() is physical address of
guest vcb, and it's not `struct vcpucb *`.

Signed-off-by: He Sheng <hesheng@wxiat.com>
Reviewed-by: Cui Wei <cuiwei@wxiat.com>
Signed-off-by: Gu Zitao <guzitao@wxiat.com>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 arch/sw_64/kvm/entry.S    | 9 +++++----
 arch/sw_64/kvm/kvm-sw64.c | 5 +++--
 2 files changed, 8 insertions(+), 6 deletions(-)

diff --git a/arch/sw_64/kvm/entry.S b/arch/sw_64/kvm/entry.S
index 0c02b68ee7d0..a331709320ca 100644
--- a/arch/sw_64/kvm/entry.S
+++ b/arch/sw_64/kvm/entry.S
@@ -11,8 +11,12 @@
 
 	.set noat
 
+/*
+ * r16: physical address of guest kvm_vcpu.arch.vcb
+ * r17: pointer to guest kvm_vcpu.arch.kvm_regs
+ * r18: pointer to hcall args
+ */
 ENTRY(__sw64_vcpu_run)
-
 	/* save host fpregs */
 	ldl	$1, TI_TASK($8)
 	rfpcr	$f0
@@ -27,9 +31,6 @@ ENTRY(__sw64_vcpu_run)
 	vstd	$f9, TASK_THREAD_F9($1)
 
 	ldi	sp, -VCPU_RET_SIZE(sp)
-	/* r16 = guest kvm_vcpu_arch.vcb struct pointer */
-	/* r17 = guest kvm_vcpu_arch.kvm_regs struct pointer */
-	/* r18 = hcall args */
 	/* save host  pt_regs to current kernel  stack */
 	ldi	sp, -PT_REGS_SIZE(sp)
 	stl	$9, PT_REGS_R9(sp)
diff --git a/arch/sw_64/kvm/kvm-sw64.c b/arch/sw_64/kvm/kvm-sw64.c
index c5a16d1c350b..6d34bc843167 100644
--- a/arch/sw_64/kvm/kvm-sw64.c
+++ b/arch/sw_64/kvm/kvm-sw64.c
@@ -68,7 +68,8 @@ int kvm_set_msi(struct kvm_kernel_irq_routing_entry *e, struct kvm *kvm, int irq
 	return vcpu_interrupt_line(vcpu, irq, true);
 }
 
-extern int __sw64_vcpu_run(struct vcpucb *vcb, struct kvm_regs *regs, struct hcall_args *args);
+extern int __sw64_vcpu_run(unsigned long vcb_pa,
+			   struct kvm_regs *regs, struct hcall_args *args);
 
 #ifdef CONFIG_KVM_MEMHOTPLUG
 static u64 get_vpcr_memhp(u64 seg_base, u64 vpn)
@@ -674,7 +675,7 @@ int kvm_arch_vcpu_ioctl_run(struct kvm_vcpu *vcpu)
 		trace_kvm_sw64_entry(vcpu->vcpu_id, vcpu->arch.regs.pc);
 		vcpu->mode = IN_GUEST_MODE;
 
-		ret = __sw64_vcpu_run((struct vcpucb *)__phys_addr((unsigned long)vcb), &(vcpu->arch.regs), &hargs);
+		ret = __sw64_vcpu_run(__pa(vcb), &(vcpu->arch.regs), &hargs);
 
 		/* Back from guest */
 		vcpu->mode = OUTSIDE_GUEST_MODE;
-- 
2.33.0

