From 64b534dcf00fda30bde88af02dcdd8daf9b0dd3f Mon Sep 17 00:00:00 2001
From: Yuyao Lin <linyuyao1@huawei.com>
Date: Wed, 30 Nov 2022 18:23:29 +0800
Subject: [PATCH] Revert "posix-cpu-timers: Make timespec to nsec conversion
 safe"
Patch-mainline: Not yet, from openEuler
References: bsn#22
openEuler-commit: 64b534dcf00fda30bde88af02dcdd8daf9b0dd3f
Modified-by-SEL: No


hulk inclusion
category: bugfix
bugzilla: https://gitee.com/openeuler/kernel/issues/I61XP8

--------------------------------

This reverts commit 098b0e01a91c42aaaf0425605cd126b03fcb0bcf.

Function timespec64_to_ns() Add the upper and lower limits check in
commit cb47755725da ("time: Prevent undefined behaviour in timespec64_to_ns()"),
timespec64_to_ktime() only check the upper limits,so revert this patch
can fix overflow.

Signed-off-by: Yuyao Lin <linyuyao1@huawei.com>
Reviewed-by: Wei Li <liwei391@huawei.com>
Signed-off-by: Zheng Zengkai <zhengzengkai@huawei.com>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 kernel/time/posix-cpu-timers.c | 6 +-----
 1 file changed, 1 insertion(+), 5 deletions(-)

diff --git a/kernel/time/posix-cpu-timers.c b/kernel/time/posix-cpu-timers.c
index d6b46346be1f..c97bc3e3b210 100644
--- a/kernel/time/posix-cpu-timers.c
+++ b/kernel/time/posix-cpu-timers.c
@@ -591,11 +591,7 @@ static int posix_cpu_timer_set(struct k_itimer *timer, int timer_flags,
 		return -ESRCH;
 	}
 
-	/*
-	 * Use the to_ktime conversion because that clamps the maximum
-	 * value to KTIME_MAX and avoid multiplication overflows.
-	 */
-	new_expires = ktime_to_ns(timespec64_to_ktime(new->it_value));
+	new_expires = timespec64_to_ns(&new->it_value);
 
 	/*
 	 * Protect against sighand release/switch in exit/exec and p->cpu_timers
-- 
2.33.0

