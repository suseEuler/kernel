From be9e2144b003aa1ac25a4d2c34fcc830e67c4570 Mon Sep 17 00:00:00 2001
From: Peng Wu <wupeng58@huawei.com>
Date: Fri, 11 Nov 2022 09:32:28 +0800
Subject: [PATCH] mm: Add kernel param for memory reliable
Patch-mainline: Not yet, from openEuler
References: bsn#22
openEuler-commit: be9e2144b003aa1ac25a4d2c34fcc830e67c4570
Modified-by-SEL: No


hulk inclusion
category: feature
bugzilla: https://gitee.com/openeuler/kernel/issues/I4SK3S
CVE: NA

--------------------------------

Add kernel param reliable_debug in reparation for control memory reliable
features.

Signed-off-by: Peng Wu <wupeng58@huawei.com>
Reviewed-by: Kefeng Wang <wangkefeng.wang@huawei.com>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 .../admin-guide/kernel-parameters.txt         |  5 ++++
 mm/mem_reliable.c                             | 24 +++++++++++++++++++
 2 files changed, 29 insertions(+)

diff --git a/Documentation/admin-guide/kernel-parameters.txt b/Documentation/admin-guide/kernel-parameters.txt
index fd3241d15568..4da9cb4dd234 100644
--- a/Documentation/admin-guide/kernel-parameters.txt
+++ b/Documentation/admin-guide/kernel-parameters.txt
@@ -4785,6 +4785,11 @@
 			[KNL, SMP] Set scheduler's default relax_domain_level.
 			See Documentation/admin-guide/cgroup-v1/cpusets.rst.
 
+	reliable_debug=	[ARM64]
+			Format: []
+			Only works with CONFIG_MEMORY_RELIABLE and
+			"kernelcore=reliable" is configured.
+
 	reserve=	[KNL,BUGS] Force kernel to ignore I/O ports or memory
 			Format: <base1>,<size1>[,<base2>,<size2>,...]
 			Reserve I/O ports or memory so the kernel won't use
diff --git a/mm/mem_reliable.c b/mm/mem_reliable.c
index 06d11cee52b6..e1b6a1002933 100644
--- a/mm/mem_reliable.c
+++ b/mm/mem_reliable.c
@@ -107,3 +107,27 @@ void reliable_report_meminfo(struct seq_file *m)
 	show_val_kb(m, "ReliableUsed:     ", used_reliable_pages());
 	show_val_kb(m, "ReliableBuddyMem: ", free_reliable_pages());
 }
+
+static int __init setup_reliable_debug(char *str)
+{
+	if (*str++ != '=' || !*str)
+		/*
+		 * No options specified.
+		 */
+		goto out;
+
+	/*
+	 * Determine which debug features should be switched on
+	 */
+	for (; *str && *str != ','; str++) {
+		switch (*str) {
+		default:
+			pr_err("reliable_debug option '%c' unknown. skipped\n",
+			       *str);
+		}
+	}
+
+out:
+	return 1;
+}
+__setup("reliable_debug", setup_reliable_debug);
-- 
2.33.0

