From f1cfb6175ca81adf5ad5448ea4ad8cd205acf96b Mon Sep 17 00:00:00 2001
From: Liu Shixin <liushixin2@huawei.com>
Date: Thu, 28 Jul 2022 18:07:02 +0800
Subject: [PATCH] mm: hugetlb_vmemmap: disable hugetlb_vmemmap when dynamic
 hugetlb is enabled
Patch-mainline: Not yet, from openEuler
References: bsn#22
openEuler-commit: f1cfb6175ca81adf5ad5448ea4ad8cd205acf96b
Modified-by-SEL: No


hulk inclusion
category: feature
bugzilla: 187198, https://gitee.com/openeuler/kernel/issues/I5GVFO
CVE: NA

--------------------------------

Disable hugetlb_vmemmap when dynamic hugetlb is enabled.
By the way, fix a similar spelling error.

Signed-off-by: Liu Shixin <liushixin2@huawei.com>
Reviewed-by: Kefeng Wang <wangkefeng.wang@huawei.com>
Signed-off-by: Zheng Zengkai <zhengzengkai@huawei.com>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 mm/dynamic_hugetlb.c |  4 ++--
 mm/huge_memory.c     |  2 +-
 mm/hugetlb_vmemmap.c | 11 ++++++++++-
 3 files changed, 13 insertions(+), 4 deletions(-)

diff --git a/mm/dynamic_hugetlb.c b/mm/dynamic_hugetlb.c
index f8ebc8ab7d60..c1b968a7e668 100644
--- a/mm/dynamic_hugetlb.c
+++ b/mm/dynamic_hugetlb.c
@@ -1150,6 +1150,6 @@ static int __init dynamic_hugetlb_setup(char *s)
 {
 	if (!strcmp(s, "on"))
 		enable_dhugetlb = true;
-	return 1;
+	return 0;
 }
-__setup("dynamic_hugetlb=", dynamic_hugetlb_setup);
+early_param("dynamic_hugetlb", dynamic_hugetlb_setup);
diff --git a/mm/huge_memory.c b/mm/huge_memory.c
index bfe079e294cb..79c855b5adad 100644
--- a/mm/huge_memory.c
+++ b/mm/huge_memory.c
@@ -401,7 +401,7 @@ static int __init hugepage_init(void)
 	 */
 	if (enable_dhugetlb) {
 		transparent_hugepage_flags = 0;
-		pr_info("transparent hugepage is disabled due to confilct with dynamic hugetlb\n");
+		pr_info("transparent hugepage is disabled due to conflict with dynamic hugetlb\n");
 		return -EINVAL;
 	}
 
diff --git a/mm/hugetlb_vmemmap.c b/mm/hugetlb_vmemmap.c
index e9f63cb9e3d4..7ec8560d267d 100644
--- a/mm/hugetlb_vmemmap.c
+++ b/mm/hugetlb_vmemmap.c
@@ -176,6 +176,7 @@
  */
 #define pr_fmt(fmt)	"HugeTLB: " fmt
 
+#include <linux/dynamic_hugetlb.h>
 #include "hugetlb_vmemmap.h"
 
 /*
@@ -304,6 +305,12 @@ void __init hugetlb_vmemmap_init(struct hstate *h)
 	BUILD_BUG_ON(__NR_USED_SUBPAGE >=
 		     RESERVE_VMEMMAP_SIZE / sizeof(struct page));
 
+	if (enable_dhugetlb) {
+		pr_warn_once("cannot optimize vmemmap pages due to conflict with dynamic hugetlb\n");
+		static_branch_disable(&hugetlb_optimize_vmemmap_key);
+		return;
+	}
+
 	if (!is_power_of_2(sizeof(struct page))) {
 		pr_warn_once("cannot optimize vmemmap pages because \"struct page\" crosses page boundaries\n");
 		static_branch_disable(&hugetlb_optimize_vmemmap_key);
@@ -366,8 +373,10 @@ static __init int hugetlb_vmemmap_sysctls_init(void)
 	/*
 	 * If "memory_hotplug.memmap_on_memory" is enabled or "struct page"
 	 * crosses page boundaries, the vmemmap pages cannot be optimized.
+	 * If "dynamic hugetlb" is enabled, the vmemmap pages cannot be
+	 * optimized.
 	 */
-	if (is_power_of_2(sizeof(struct page)))
+	if (is_power_of_2(sizeof(struct page)) && !enable_dhugetlb)
 		register_sysctl_init("vm", hugetlb_vmemmap_sysctls);
 
 	return 0;
-- 
2.33.0

