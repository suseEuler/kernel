From b1554ee3026fdec535169ab7a3c83dc713038865 Mon Sep 17 00:00:00 2001
From: Mao Minkai <maominkai@wxiat.com>
Date: Wed, 23 Nov 2022 15:30:00 +0800
Subject: [PATCH] sw64: optimize single float load store instruction emulation
Patch-mainline: Not yet, from openEuler
References: bsn#22
openEuler-commit: b1554ee3026fdec535169ab7a3c83dc713038865
Modified-by-SEL: No


Sunway inclusion
category: feature
bugzilla: https://gitee.com/openeuler/kernel/issues/I56OLG

--------------------------------

Use instructions instead of manual calculation to move data between
integer register and floating point register to improve performance.

Signed-off-by: Mao Minkai <maominkai@wxiat.com>
Reviewed-by: He Sheng <hesheng@wxiat.com>
Signed-off-by: Gu Zitao <guzitao@wxiat.com>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 arch/sw_64/kernel/traps.c | 42 ++-------------------------------------
 1 file changed, 2 insertions(+), 40 deletions(-)

diff --git a/arch/sw_64/kernel/traps.c b/arch/sw_64/kernel/traps.c
index b26a0e369ed9..5d13eeb71d60 100644
--- a/arch/sw_64/kernel/traps.c
+++ b/arch/sw_64/kernel/traps.c
@@ -506,44 +506,6 @@ do_entUna(void *va, unsigned long opcode, unsigned long reg,
 	die("Unhandled unaligned exception", regs, error);
 }
 
-/*
- * Convert an s-floating point value in memory format to the
- * corresponding value in register format. The exponent
- * needs to be remapped to preserve non-finite values
- * (infinities, not-a-numbers, denormals).
- */
-static inline unsigned long
-s_mem_to_reg(unsigned long s_mem)
-{
-	unsigned long frac = (s_mem >> 0) & 0x7fffff;
-	unsigned long sign = (s_mem >> 31) & 0x1;
-	unsigned long exp_msb = (s_mem >> 30) & 0x1;
-	unsigned long exp_low = (s_mem >> 23) & 0x7f;
-	unsigned long exp;
-
-	exp = (exp_msb << 10) | exp_low;	/* common case */
-	if (exp_msb) {
-		if (exp_low == 0x7f)
-			exp = 0x7ff;
-	} else {
-		if (exp_low == 0x00)
-			exp = 0x000;
-		else
-			exp |= (0x7 << 7);
-	}
-	return (sign << 63) | (exp << 52) | (frac << 29);
-}
-
-/*
- * Convert an s-floating point value in register format to the
- * corresponding value in memory format.
- */
-static inline unsigned long
-s_reg_to_mem(unsigned long s_reg)
-{
-	return ((s_reg >> 62) << 30) | ((s_reg << 5) >> 34);
-}
-
 /*
  * Handle user-level unaligned fault. Handling user-level unaligned
  * faults is *extremely* slow and produces nasty messages. A user
@@ -1271,7 +1233,7 @@ do_entUnaUser(void __user *va, unsigned long opcode,
 		: "r"(va), "0"(0));
 		if (error)
 			goto give_sigsegv;
-		sw64_write_fp_reg(reg, s_mem_to_reg((int)(tmp1 | tmp2)));
+		sw64_write_fp_reg_s(reg, tmp1 | tmp2);
 		return;
 
 	case 0x27: /* fldd */
@@ -1360,7 +1322,7 @@ do_entUnaUser(void __user *va, unsigned long opcode,
 		return;
 
 	case 0x2e: /* fsts*/
-		fake_reg = s_reg_to_mem(sw64_read_fp_reg(reg));
+		fake_reg = sw64_read_fp_reg_s(reg);
 		/* FALLTHRU */
 
 	case 0x2a: /* stw with stb*/
-- 
2.33.0

