From 604b7e008400dbb6ca0c8b23442aba4406121966 Mon Sep 17 00:00:00 2001
From: Mao Minkai <maominkai@wxiat.com>
Date: Mon, 10 Oct 2022 14:26:25 +0800
Subject: [PATCH] sw64: fix incorrect gp after kretprobe triggered
Patch-mainline: Not yet, from openEuler
References: bsn#22
openEuler-commit: 604b7e008400dbb6ca0c8b23442aba4406121966
Modified-by-SEL: No


Sunway inclusion
category: feature
bugzilla: https://gitee.com/openeuler/kernel/issues/I5XTM4

--------------------------------

SW64 use r26 to calculate gp after function return, so r26 needs to be
restored when kretprobe trampoline is hit.

Signed-off-by: Mao Minkai <maominkai@wxiat.com>
Reviewed-by: He Sheng <hesheng@wxiat.com>
Signed-off-by: Gu Zitao <guzitao@wxiat.com>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 arch/sw_64/kernel/kprobes/kprobes.c | 1 +
 1 file changed, 1 insertion(+)

diff --git a/arch/sw_64/kernel/kprobes/kprobes.c b/arch/sw_64/kernel/kprobes/kprobes.c
index 59f040eaa3e1..7080c892a24d 100644
--- a/arch/sw_64/kernel/kprobes/kprobes.c
+++ b/arch/sw_64/kernel/kprobes/kprobes.c
@@ -284,6 +284,7 @@ static int __kprobes trampoline_probe_handler(struct kprobe *p,
 
 	orig_ret_address = __kretprobe_trampoline_handler(regs, kretprobe_trampoline, NULL);
 	instruction_pointer(regs) = orig_ret_address;
+	regs->r26 = orig_ret_address;
 
 	/*
 	 * By returning a non-zero value, we are telling
-- 
2.33.0

