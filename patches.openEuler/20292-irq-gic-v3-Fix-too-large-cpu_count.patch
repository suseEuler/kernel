From 9cc7c400cfa06dcd77227f02d89b491fc8e5b0ff Mon Sep 17 00:00:00 2001
From: Xu Qiang <xuqiang36@huawei.com>
Date: Mon, 14 Nov 2022 13:28:23 +0000
Subject: [PATCH] irq-gic-v3: Fix too large cpu_count
Patch-mainline: Not yet, from openEuler
References: bsn#22
openEuler-commit: 9cc7c400cfa06dcd77227f02d89b491fc8e5b0ff
Modified-by-SEL: No


ascend inclusion
category: bugfix
bugzilla: https://gitee.com/openeuler/kernel/issues/I612UG
CVE: NA

--------------------------------

Fix that value of CPU is too large in its_inc_lpi_count.

Signed-off-by: Xu Qiang <xuqiang36@huawei.com>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 drivers/irqchip/irq-gic-v3-its.c | 10 ++++++++++
 1 file changed, 10 insertions(+)

diff --git a/drivers/irqchip/irq-gic-v3-its.c b/drivers/irqchip/irq-gic-v3-its.c
index 81271fd8954f..1cb392fb16d0 100644
--- a/drivers/irqchip/irq-gic-v3-its.c
+++ b/drivers/irqchip/irq-gic-v3-its.c
@@ -1543,6 +1543,11 @@ static __maybe_unused u32 its_read_lpi_count(struct irq_data *d, int cpu)
 
 static void its_inc_lpi_count(struct irq_data *d, int cpu)
 {
+#ifdef CONFIG_ASCEND_INIT_ALL_GICR
+	if (cpu >= nr_cpu_ids)
+		return;
+#endif
+
 	if (irqd_affinity_is_managed(d))
 		atomic_inc(&per_cpu_ptr(&cpu_lpi_count, cpu)->managed);
 	else
@@ -1551,6 +1556,11 @@ static void its_inc_lpi_count(struct irq_data *d, int cpu)
 
 static void its_dec_lpi_count(struct irq_data *d, int cpu)
 {
+#ifdef CONFIG_ASCEND_INIT_ALL_GICR
+	if (cpu >= nr_cpu_ids)
+		return;
+#endif
+
 	if (irqd_affinity_is_managed(d))
 		atomic_dec(&per_cpu_ptr(&cpu_lpi_count, cpu)->managed);
 	else
-- 
2.33.0

