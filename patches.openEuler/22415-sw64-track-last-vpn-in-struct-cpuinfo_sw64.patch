From 8be350d10ffce4f03b37cbcc3bd11d4bdf3fc6f9 Mon Sep 17 00:00:00 2001
From: He Sheng <hesheng@wxiat.com>
Date: Fri, 21 Oct 2022 15:46:33 +0800
Subject: [PATCH] sw64: track last vpn in struct cpuinfo_sw64
Patch-mainline: Not yet, from openEuler
References: bsn#22
openEuler-commit: 8be350d10ffce4f03b37cbcc3bd11d4bdf3fc6f9
Modified-by-SEL: No


Sunway inclusion
category: feature
bugzilla: https://gitee.com/openeuler/kernel/issues/I645MA

--------------------------------

The sw64_kvm_last_vpn[] suffers from false sharing, so remove
it and track last vpn in struct cpuinfo_sw64.

Signed-off-by: He Sheng <hesheng@wxiat.com>
Reviewed-by: Cui Wei <cuiwei@wxiat.com>
Signed-off-by: Gu Zitao <guzitao@wxiat.com>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 arch/sw_64/include/asm/hw_init.h |  1 +
 arch/sw_64/kvm/kvm-sw64.c        | 11 +++++------
 2 files changed, 6 insertions(+), 6 deletions(-)

diff --git a/arch/sw_64/include/asm/hw_init.h b/arch/sw_64/include/asm/hw_init.h
index 24de8977e2a7..1426892c83b4 100644
--- a/arch/sw_64/include/asm/hw_init.h
+++ b/arch/sw_64/include/asm/hw_init.h
@@ -19,6 +19,7 @@ struct cache_desc {
 
 struct cpuinfo_sw64 {
 	unsigned long last_asid;
+	unsigned long last_vpn;
 	unsigned long ipi_count;
 	struct cache_desc icache; /* Primary I-cache */
 	struct cache_desc dcache; /* Primary D or combined I/D cache */
diff --git a/arch/sw_64/kvm/kvm-sw64.c b/arch/sw_64/kvm/kvm-sw64.c
index ffcfdee58a48..eb29583c1967 100644
--- a/arch/sw_64/kvm/kvm-sw64.c
+++ b/arch/sw_64/kvm/kvm-sw64.c
@@ -23,11 +23,10 @@
 #include "vmem.c"
 
 bool set_msi_flag;
-unsigned long sw64_kvm_last_vpn[NR_CPUS];
 #if defined(CONFIG_DEBUG_FS) && defined(CONFIG_NUMA)
 extern bool bind_vcpu_enabled;
 #endif
-#define cpu_last_vpn(cpuid) sw64_kvm_last_vpn[cpuid]
+#define last_vpn(cpu)	(cpu_data[cpu].last_vpn)
 
 #ifdef CONFIG_SUBARCH_C3B
 #define WIDTH_HARDWARE_VPN	8
@@ -84,14 +83,14 @@ static u64 get_vpcr(u64 hpa_base, u64 mem_size, u64 vpn)
 
 static unsigned long __get_new_vpn_context(struct kvm_vcpu *vcpu, long cpu)
 {
-	unsigned long vpn = cpu_last_vpn(cpu);
+	unsigned long vpn = last_vpn(cpu);
 	unsigned long next = vpn + 1;
 
 	if ((vpn & HARDWARE_VPN_MASK) >= HARDWARE_VPN_MASK) {
 		tbia();
 		next = (vpn & ~HARDWARE_VPN_MASK) + VPN_FIRST_VERSION + 1; /* bypass 0 */
 	}
-	cpu_last_vpn(cpu) = next;
+	last_vpn(cpu) = next;
 	return next;
 }
 
@@ -101,7 +100,7 @@ static void sw64_kvm_switch_vpn(struct kvm_vcpu *vcpu)
 	unsigned long vpnc;
 	long cpu = smp_processor_id();
 
-	vpn = cpu_last_vpn(cpu);
+	vpn = last_vpn(cpu);
 	vpnc = vcpu->arch.vpnc[cpu];
 
 	if ((vpnc ^ vpn) & ~HARDWARE_VPN_MASK) {
@@ -897,7 +896,7 @@ static int __init kvm_sw64_init(void)
 		return ret;
 
 	for (i = 0; i < NR_CPUS; i++)
-		sw64_kvm_last_vpn[i] = VPN_FIRST_VERSION;
+		last_vpn(i) = VPN_FIRST_VERSION;
 
 	ret = kvm_init(NULL, sizeof(struct kvm_vcpu), 0, THIS_MODULE);
 	if (ret) {
-- 
2.33.0

