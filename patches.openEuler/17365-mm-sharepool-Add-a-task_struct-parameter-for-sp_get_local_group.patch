From a829370d803a17014c0509be190d926641d34011 Mon Sep 17 00:00:00 2001
From: Wang Wensheng <wangwensheng4@huawei.com>
Date: Tue, 19 Jul 2022 11:36:23 +0800
Subject: [PATCH] mm/sharepool: Add a task_struct parameter for
 sp_get_local_group()
Patch-mainline: Not yet, from openEuler
References: bsn#22
openEuler-commit: a829370d803a17014c0509be190d926641d34011
Modified-by-SEL: No


hulk inclusion
category: feature
bugzilla: https://gitee.com/openeuler/kernel/issues/I5DS9S
CVE: NA

-------------------------------------------------

sp_get_local_group() could be invoked in kthread, where the current
process isn't the process we want. Add a parameter and let the caller to
avoid this problem.

Signed-off-by: Wang Wensheng <wangwensheng4@huawei.com>
Reviewed-by: Weilong Chen <chenweilong@huawei.com>
Signed-off-by: Zheng Zengkai <zhengzengkai@huawei.com>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 mm/share_pool.c | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/mm/share_pool.c b/mm/share_pool.c
index b14152acbee8..a39bece9af96 100644
--- a/mm/share_pool.c
+++ b/mm/share_pool.c
@@ -370,7 +370,7 @@ static inline bool is_local_group(int spg_id)
 	return spg_id >= SPG_ID_LOCAL_MIN && spg_id <= SPG_ID_LOCAL_MAX;
 }
 
-static struct sp_group *sp_get_local_group(struct mm_struct *mm)
+static struct sp_group *sp_get_local_group(struct task_struct *tsk, struct mm_struct *mm)
 {
 	int ret;
 	struct sp_group_master *master;
@@ -385,7 +385,7 @@ static struct sp_group *sp_get_local_group(struct mm_struct *mm)
 	up_read(&sp_group_sem);
 
 	down_write(&sp_group_sem);
-	ret = sp_init_group_master_locked(current, mm);
+	ret = sp_init_group_master_locked(tsk, mm);
 	if (ret) {
 		up_write(&sp_group_sem);
 		return ERR_PTR(ret);
@@ -2499,7 +2499,7 @@ static int sp_alloc_prepare(unsigned long size, unsigned long sp_flags,
 		}
 		ac->type = SPA_TYPE_ALLOC;
 	} else {  /* allocation pass through scene */
-		spg = sp_get_local_group(current->mm);
+		spg = sp_get_local_group(current, current->mm);
 		if (IS_ERR(spg))
 			return PTR_ERR(spg);
 		down_read(&spg->rw_lock);
@@ -3869,7 +3869,7 @@ bool sp_config_dvpp_range(size_t start, size_t size, int device_id, int pid)
 	if (!mm)
 		goto put_task;
 
-	spg = sp_get_local_group(mm);
+	spg = sp_get_local_group(tsk, mm);
 	if (IS_ERR(spg))
 		goto put_mm;
 
-- 
2.33.0

