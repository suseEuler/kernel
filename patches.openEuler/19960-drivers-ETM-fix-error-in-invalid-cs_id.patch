From 381153e08c3923a407a6e8d6949494a6fde4e46e Mon Sep 17 00:00:00 2001
From: Junhao He <hejunhao3@huawei.com>
Date: Tue, 8 Nov 2022 14:38:31 +0800
Subject: [PATCH] drivers/ETM: fix error in invalid cs_id
Patch-mainline: Not yet, from openEuler
References: bsn#22
openEuler-commit: 381153e08c3923a407a6e8d6949494a6fde4e46e
Modified-by-SEL: Yes, refreshed due to different context


driver inclusion
category: bugfix
bugzilla: https://gitee.com/openeuler/kernel/issues/I5YCYK

--------------------------------------------------------------------------

trace id is invalid(trace_id = 0 or trace_id > 0x6F). In this situation,
we cannot parse trace data using perf tool. so make trace_id in the
range of 1 to 0x6F in coresight_get_trace_id().

Signed-off-by: Junhao He <hejunhao3@huawei.com>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 include/linux/coresight-pmu.h       |    5 +++--
 tools/include/linux/coresight-pmu.h |    5 +++--
 2 files changed, 6 insertions(+), 4 deletions(-)

--- a/include/linux/coresight-pmu.h
+++ b/include/linux/coresight-pmu.h
@@ -8,7 +8,8 @@
 #define _LINUX_CORESIGHT_PMU_H
 
 #define CORESIGHT_ETM_PMU_NAME "cs_etm"
-#define CORESIGHT_ETM_PMU_SEED  0x10
+#define CORESIGHT_ETM_PMU_SEED  0x1
+#define CORESIGHT_ETM_CSID_MAX  0x70
 
 /* ETMv3.5/PTM's ETMCR config bit */
 #define ETM_OPT_CYCACC  12
@@ -30,7 +31,7 @@ static inline int coresight_get_trace_id
 	 * the common convention is to have data trace IDs be I(N) + 1,
 	 * set instruction trace IDs as a function of the CPU number.
 	 */
-	return (CORESIGHT_ETM_PMU_SEED + (cpu * 2));
+	return (CORESIGHT_ETM_PMU_SEED + (cpu * 2)) % CORESIGHT_ETM_CSID_MAX;
 }
 
 #endif
--- a/tools/include/linux/coresight-pmu.h
+++ b/tools/include/linux/coresight-pmu.h
@@ -8,7 +8,8 @@
 #define _LINUX_CORESIGHT_PMU_H
 
 #define CORESIGHT_ETM_PMU_NAME "cs_etm"
-#define CORESIGHT_ETM_PMU_SEED  0x10
+#define CORESIGHT_ETM_PMU_SEED  0x1
+#define CORESIGHT_ETM_CSID_MAX  0x70
 
 /* ETMv3.5/PTM's ETMCR config bit */
 #define ETM_OPT_BRANCH_BROADCAST 8
@@ -35,7 +36,7 @@ static inline int coresight_get_trace_id
 	 * the common convention is to have data trace IDs be I(N) + 1,
 	 * set instruction trace IDs as a function of the CPU number.
 	 */
-	return (CORESIGHT_ETM_PMU_SEED + (cpu * 2));
+	return (CORESIGHT_ETM_PMU_SEED + (cpu * 2)) % CORESIGHT_ETM_CSID_MAX;
 }
 
 #endif
