From 4b69775b87b949dc615eadae8fdfa54777962d66 Mon Sep 17 00:00:00 2001
From: Yang Jihong <yangjihong1@huawei.com>
Date: Wed, 6 Jul 2022 18:05:35 +0800
Subject: [PATCH] livepatch/x86: Add arch_klp_module_check_calltrace
Patch-mainline: Not yet, from openEuler
References: bsn#22
openEuler-commit: 4b69775b87b949dc615eadae8fdfa54777962d66
Modified-by-SEL: No


hulk inclusion
category: feature
bugzilla: https://gitee.com/openeuler/kernel/issues/I5CJ7X

--------------------------------

Add arch_klp_module_check_calltrace to check whether stacks of all tasks
are within the code segment of module.

Signed-off-by: Yang Jihong <yangjihong1@huawei.com>
Reviewed-by: Xu Kuohai <xukuohai@huawei.com>
Signed-off-by: Zheng Zengkai <zhengzengkai@huawei.com>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 arch/x86/include/asm/livepatch.h |  1 +
 arch/x86/kernel/livepatch.c      | 17 +++++++++++++++++
 2 files changed, 18 insertions(+)

diff --git a/arch/x86/include/asm/livepatch.h b/arch/x86/include/asm/livepatch.h
index e0faa20d525d..b510f935ec11 100644
--- a/arch/x86/include/asm/livepatch.h
+++ b/arch/x86/include/asm/livepatch.h
@@ -52,6 +52,7 @@ int arch_klp_check_breakpoint(struct arch_klp_data *arch_data, void *old_func);
 int arch_klp_add_breakpoint(struct arch_klp_data *arch_data, void *old_func);
 void arch_klp_remove_breakpoint(struct arch_klp_data *arch_data, void *old_func);
 int klp_int3_handler(struct pt_regs *regs);
+int arch_klp_module_check_calltrace(void *data);
 #endif
 
 #endif
diff --git a/arch/x86/kernel/livepatch.c b/arch/x86/kernel/livepatch.c
index a778b94afdef..d134169488b6 100644
--- a/arch/x86/kernel/livepatch.c
+++ b/arch/x86/kernel/livepatch.c
@@ -372,6 +372,23 @@ int klp_check_calltrace(struct klp_patch *patch, int enable)
 	return ret;
 }
 
+static bool check_module_calltrace(void *data, int *ret, unsigned long pc)
+{
+	struct module *mod = (struct module *)data;
+
+	if (within_module_core(pc, mod)) {
+		pr_err("module %s is in use!\n", mod->name);
+		*ret = -EBUSY;
+		return false;
+	}
+	return true;
+}
+
+int arch_klp_module_check_calltrace(void *data)
+{
+	return do_check_calltrace(check_module_calltrace, data);
+}
+
 int arch_klp_check_breakpoint(struct arch_klp_data *arch_data, void *old_func)
 {
 	int ret;
-- 
2.33.0

