From 9a51b37461f6ee8a5b1eade215974b6ec3213e44 Mon Sep 17 00:00:00 2001
From: Yang Jihong <yangjihong1@huawei.com>
Date: Wed, 6 Jul 2022 18:05:24 +0800
Subject: [PATCH] livepatch/powerpc: Change livepatch_create_btamp to a public
 function
Patch-mainline: Not yet, from openEuler
References: bsn#22
openEuler-commit: 9a51b37461f6ee8a5b1eade215974b6ec3213e44
Modified-by-SEL: No


hulk inclusion
category: feature
bugzilla: https://gitee.com/openeuler/kernel/issues/I5CJ7X

--------------------------------

A trampoline needs to be created before adding a breakpoint for PPC64.
Change livepatch_create_btamp to a public function and delete redundant
input parameter "struct module *me".

Fix an issue where the branch stub of livepatch is not created if
address of the modified function is a branch function.

Signed-off-by: Yang Jihong <yangjihong1@huawei.com>
Reviewed-by: Xu Kuohai <xukuohai@huawei.com>
Signed-off-by: Zheng Zengkai <zhengzengkai@huawei.com>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 arch/powerpc/include/asm/livepatch.h |  4 ++++
 arch/powerpc/kernel/module_64.c      | 26 ++++++++++++--------------
 2 files changed, 16 insertions(+), 14 deletions(-)

diff --git a/arch/powerpc/include/asm/livepatch.h b/arch/powerpc/include/asm/livepatch.h
index fea12c6b915c..9ddddc35d21e 100644
--- a/arch/powerpc/include/asm/livepatch.h
+++ b/arch/powerpc/include/asm/livepatch.h
@@ -75,6 +75,10 @@ extern void livepatch_branch_stub_end(void);
 #ifdef PPC64_ELF_ABI_v1
 extern void livepatch_branch_trampoline(void);
 extern void livepatch_branch_trampoline_end(void);
+void livepatch_create_btramp(struct ppc64_klp_btramp_entry *entry, unsigned long addr);
+#else
+static inline void livepatch_create_btramp(struct ppc64_klp_btramp_entry *entry,
+					   unsigned long addr) {}
 #endif /* PPC64_ELF_ABI_v1 */
 
 int livepatch_create_branch(unsigned long pc,
diff --git a/arch/powerpc/kernel/module_64.c b/arch/powerpc/kernel/module_64.c
index 7a143ab7d433..ef093691f606 100644
--- a/arch/powerpc/kernel/module_64.c
+++ b/arch/powerpc/kernel/module_64.c
@@ -835,16 +835,15 @@ static int livepatch_create_bstub(struct ppc64_klp_bstub_entry *entry,
 		return 0;
 	}
 
-	if (entry->magic != BRANCH_STUB_MAGIC) {
-		stub_start = ppc_function_entry((void *)livepatch_branch_stub);
-		stub_end = ppc_function_entry((void *)livepatch_branch_stub_end);
-		stub_size = stub_end - stub_start;
-		memcpy(entry->jump, (u32 *)stub_start, stub_size);
-
-		entry->jump[0] |= PPC_HA(reladdr);
-		entry->jump[1] |= PPC_LO(reladdr);
-		entry->magic = BRANCH_STUB_MAGIC;
-	}
+
+	stub_start = ppc_function_entry((void *)livepatch_branch_stub);
+	stub_end = ppc_function_entry((void *)livepatch_branch_stub_end);
+	stub_size = stub_end - stub_start;
+	memcpy(entry->jump, (u32 *)stub_start, stub_size);
+
+	entry->jump[0] |= PPC_HA(reladdr);
+	entry->jump[1] |= PPC_LO(reladdr);
+	entry->magic = BRANCH_STUB_MAGIC;
 	entry->trampoline = addr;
 
 	pr_debug("Create livepatch branch stub 0x%px with reladdr 0x%lx r2 0x%lx to trampoline 0x%lx\n",
@@ -854,9 +853,8 @@ static int livepatch_create_bstub(struct ppc64_klp_bstub_entry *entry,
 }
 
 #ifdef PPC64_ELF_ABI_v1
-static void livepatch_create_btramp(struct ppc64_klp_btramp_entry *entry,
-			      unsigned long addr,
-			      struct module *me)
+void livepatch_create_btramp(struct ppc64_klp_btramp_entry *entry,
+			     unsigned long addr)
 {
 	unsigned long reladdr, tramp_start, tramp_end, tramp_size;
 
@@ -894,7 +892,7 @@ int livepatch_create_branch(unsigned long pc,
 {
 #ifdef PPC64_ELF_ABI_v1
 	/* Create trampoline to addr(new func) */
-	livepatch_create_btramp((struct ppc64_klp_btramp_entry *)trampoline, addr, me);
+	livepatch_create_btramp((struct ppc64_klp_btramp_entry *)trampoline, addr);
 #else
 	trampoline = addr;
 #endif
-- 
2.33.0

