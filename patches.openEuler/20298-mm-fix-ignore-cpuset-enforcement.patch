From 4e01857379ef9005f53763c036fc1b42354877f3 Mon Sep 17 00:00:00 2001
From: Zhou Guanghui <zhouguanghui1@huawei.com>
Date: Mon, 14 Nov 2022 13:28:29 +0000
Subject: [PATCH] mm: fix ignore cpuset enforcement
Patch-mainline: Not yet, from openEuler
References: bsn#22
openEuler-commit: 4e01857379ef9005f53763c036fc1b42354877f3
Modified-by-SEL: No


ascend inclusion
category: bugfix
bugzilla: https://gitee.com/openeuler/kernel/issues/I612UG
CVE: NA

-----------------------------------------------------

Since the current condition ignores the cpuset enforcement by adding
__GFP_THISNODEi to the gfp_mask, this will result in allocations that
specify __GFP_THISNODE and non-cdm nodes not subject to cpuset
restrictions.

For example, procA pid 1000:
node 0 cpus: 0 1 2 3
node 0 free: 57199MB
node 1 cpus: 4 5 6 7
node 1 free: 55930MB

cpuset/test/cpuset.mems  1
cpuset/test/tasks        1000
cpuset/test/cpuset.cpus  0-3

No cdm node exists. When procA malloc 100MB memory, the result is:
node 0 cpus: 0 1 2 3
node 0 free: 57099MB
node 1 cpus: 4 5 6 7
node 1 free: 55930MB
This is not what we expected, and in fact 100 MB of memory should be
allocated from node1. The reason for this problem is that THP specifies
__GFP_THISNODE to attempt to allocate from the local node.

Therefore, the cpuset enforcement should be ignored only when explicitly
allocating memory from the cdm node using __GFP_ THISNODE.

Signed-off-by: Zhou Guanghui <zhouguanghui1@huawei.com>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 mm/page_alloc.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/mm/page_alloc.c b/mm/page_alloc.c
index 0965e38a4247..529ca0c07aae 100644
--- a/mm/page_alloc.c
+++ b/mm/page_alloc.c
@@ -4964,7 +4964,8 @@ static inline bool prepare_alloc_pages(gfp_t gfp_mask, unsigned int order,
 	ac->migratetype = gfp_migratetype(gfp_mask);
 
 #ifdef CONFIG_COHERENT_DEVICE
-	if (cpusets_enabled() && !(*alloc_gfp & __GFP_THISNODE)) {
+	if (cpusets_enabled() &&
+	    (!(*alloc_gfp & __GFP_THISNODE) || !is_cdm_node(preferred_nid))) {
 #else
 	if (cpusets_enabled()) {
 #endif
-- 
2.33.0

