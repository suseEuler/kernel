From 380566df0b6d22383cbd1c9c6daf5fbeeb262549 Mon Sep 17 00:00:00 2001
From: He Sheng <hesheng@wxiat.com>
Date: Mon, 7 Nov 2022 16:59:45 +0800
Subject: [PATCH] sw64: generate call instruction with disp 0
Patch-mainline: Not yet, from openEuler
References: bsn#22
openEuler-commit: 380566df0b6d22383cbd1c9c6daf5fbeeb262549
Modified-by-SEL: No


Sunway inclusion
category: feature
bugzilla: https://gitee.com/openeuler/kernel/issues/I645S9

--------------------------------

The disp is jump hint and target is PC+4*SEXT(disp[15:0]).

Signed-off-by: He Sheng <hesheng@wxiat.com>
Reviewed-by: Cui Wei <cuiwei@wxiat.com>
Signed-off-by: Gu Zitao <guzitao@wxiat.com>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 arch/sw_64/kernel/ftrace.c | 6 +++---
 arch/sw_64/kernel/insn.c   | 2 +-
 2 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/arch/sw_64/kernel/ftrace.c b/arch/sw_64/kernel/ftrace.c
index a2784feaf150..4bd89c709ad5 100644
--- a/arch/sw_64/kernel/ftrace.c
+++ b/arch/sw_64/kernel/ftrace.c
@@ -46,12 +46,12 @@ int ftrace_update_ftrace_func(ftrace_func_t func)
 
 	current_tracer = (unsigned long)func;
 	pc = (unsigned long)&ftrace_call;
-	new = SW64_CALL(R26, R27, 1);
+	new = SW64_CALL(R26, R27, 0);
 	ret = ftrace_modify_code(pc, new);
 
 	if (!ret) {
 		pc = (unsigned long)&ftrace_regs_call;
-		new = SW64_CALL(R26, R27, 1);
+		new = SW64_CALL(R26, R27, 0);
 		ret = ftrace_modify_code(pc, new);
 	}
 
@@ -75,7 +75,7 @@ int ftrace_make_call(struct dyn_ftrace *rec, unsigned long addr)
 	insn[0] = SW64_NOP;
 	/* ldl r28,(ftrace_addr_offset)(r8) */
 	insn[1] = (0x23U << 26) | (28U << 21) | (8U << 16) | offset;
-	insn[2] = SW64_CALL(R28, R28, 1);
+	insn[2] = SW64_CALL(R28, R28, 0);
 
 	/* replace the 3 mcount instructions at once */
 	return copy_to_kernel_nofault((void *)pc, insn, 3 * SW64_INSN_SIZE);
diff --git a/arch/sw_64/kernel/insn.c b/arch/sw_64/kernel/insn.c
index e8dd41b6b7c4..281578e1bfc0 100644
--- a/arch/sw_64/kernel/insn.c
+++ b/arch/sw_64/kernel/insn.c
@@ -84,7 +84,7 @@ unsigned int __kprobes sw64_insn_nop(void)
 
 unsigned int __kprobes sw64_insn_call(unsigned int ra, unsigned int rb)
 {
-	return SW64_CALL(ra, rb, 1);
+	return SW64_CALL(ra, rb, 0);
 }
 
 unsigned int __kprobes sw64_insn_sys_call(unsigned int num)
-- 
2.33.0

