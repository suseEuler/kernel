From a3a6ee2e6ff4396ba5a92f9964730068ca0d98e6 Mon Sep 17 00:00:00 2001
From: Liu Shixin <liushixin2@huawei.com>
Date: Thu, 8 Dec 2022 21:45:33 +0800
Subject: [PATCH] mm/dynamic_hugetlb: fix compound_nr incorrect
Patch-mainline: Not yet, from openEuler
References: bsn#22
openEuler-commit: a3a6ee2e6ff4396ba5a92f9964730068ca0d98e6
Modified-by-SEL: No


hulk inclusion
category: bugfix
bugzilla: https://gitee.com/openeuler/kernel/issues/I641XX
CVE: NA

--------------------------------

Patch 1378a5ee451a ("mm: store compound_nr as well as compound_order") add
a new member compound_nr in struct page, and use this new member insteal
of compound_order in hugetlb_cgroup_move_parent() to compute the nr_pages.

In free_hugepage_to_hugetlb(), we reset page->mapping to NULL for each
subpage. Since page->mapping and page->compound_nr is union, we reset
page->compound_nr too unexpectly. This will finally result the nr_pages
incorrect in hugetlb_cgroup_move_parent() and can't release hugetlb_cgroup.

Fix this problem by reset page->compound_nr using set_compound_order().

Signed-off-by: Liu Shixin <liushixin2@huawei.com>
Reviewed-by: Kefeng Wang<wangkefeng.wang@huawei.com>
Signed-off-by: Zheng Zengkai <zhengzengkai@huawei.com>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 mm/dynamic_hugetlb.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/mm/dynamic_hugetlb.c b/mm/dynamic_hugetlb.c
index c1b968a7e668..c6629a8de7c0 100644
--- a/mm/dynamic_hugetlb.c
+++ b/mm/dynamic_hugetlb.c
@@ -799,7 +799,8 @@ static int free_hugepage_to_hugetlb(struct dhugetlb_pool *hpool)
 			p->mapping = NULL;
 		}
 		set_compound_page_dtor(page, HUGETLB_PAGE_DTOR);
-
+		/* compound_nr and mapping are union in page, reset it. */
+		set_compound_order(page, PUD_SHIFT - PAGE_SHIFT);
 		nid = page_to_nid(page);
 		SetHPageFreed(page);
 		list_move(&page->lru, &h->hugepage_freelists[nid]);
-- 
2.33.0

