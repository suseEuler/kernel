From 852e6489f5d399a75ad6e755e60e9312a2e4300e Mon Sep 17 00:00:00 2001
From: Xu Chenjiao <xuchenjiao@wxiat.com>
Date: Mon, 6 Jun 2022 16:50:04 +0800
Subject: [PATCH] sw64: pcie: fix lack of PME and AER interrupt service
 routines
Patch-mainline: Not yet, from openEuler
References: bsn#22
openEuler-commit: 852e6489f5d399a75ad6e755e60e9312a2e4300e
Modified-by-SEL: No


Sunway inclusion
category: bugfix
bugzilla: https://gitee.com/openeuler/kernel/issues/I56XUF

--------------------------------

On SW64 platform, we used to enable PME and AER interrupt by default,
however, there is a risk that no body cares the interrupt routine when
CONFIG_PCIE_PME=n or CONFIG_PCIEAER=n. So let's fix this problem.

Signed-off-by: Xu Chenjiao <xuchenjiao@wxiat.com>

Signed-off-by: Gu Zitao <guzitao@wxiat.com>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 arch/sw_64/chip/chip3/chip.c | 30 +++++++++++++++++++-----------
 1 file changed, 19 insertions(+), 11 deletions(-)

diff --git a/arch/sw_64/chip/chip3/chip.c b/arch/sw_64/chip/chip3/chip.c
index b73afc9c62ac..2103d93a53a2 100644
--- a/arch/sw_64/chip/chip3/chip.c
+++ b/arch/sw_64/chip/chip3/chip.c
@@ -102,8 +102,11 @@ void set_devint_wken(int node)
 
 void set_pcieport_service_irq(int node, int index)
 {
-	write_piu_ior0(node, index, PMEINTCONFIG, PME_ENABLE_INTD_CORE0);
-	write_piu_ior0(node, index, AERERRINTCONFIG, AER_ENABLE_INTD_CORE0);
+	if (IS_ENABLED(CONFIG_PCIE_PME))
+		write_piu_ior0(node, index, PMEINTCONFIG, PME_ENABLE_INTD_CORE0);
+
+	if (IS_ENABLED(CONFIG_PCIEAER))
+		write_piu_ior0(node, index, AERERRINTCONFIG, AER_ENABLE_INTD_CORE0);
 }
 
 static int chip3_get_cpu_nums(void)
@@ -438,7 +441,7 @@ extern struct pci_controller *hose_head, **hose_tail;
 static void sw6_handle_intx(unsigned int offset)
 {
 	struct pci_controller *hose;
-	unsigned long value, pme_value, aer_value;
+	unsigned long value;
 
 	hose = hose_head;
 	for (hose = hose_head; hose; hose = hose->next) {
@@ -451,15 +454,20 @@ static void sw6_handle_intx(unsigned int offset)
 			write_piu_ior0(hose->node, hose->index, INTACONFIG + (offset << 7), value);
 		}
 
-		pme_value = read_piu_ior0(hose->node, hose->index, PMEINTCONFIG);
-		aer_value = read_piu_ior0(hose->node, hose->index, AERERRINTCONFIG);
-		if ((pme_value >> 63) || (aer_value >> 63)) {
-			handle_irq(hose->service_irq);
+		if (IS_ENABLED(CONFIG_PCIE_PME)) {
+			value = read_piu_ior0(hose->node, hose->index, PMEINTCONFIG);
+			if (value >> 63) {
+				handle_irq(hose->service_irq);
+				write_piu_ior0(hose->node, hose->index, PMEINTCONFIG, value);
+			}
+		}
 
-			if (pme_value >> 63)
-				write_piu_ior0(hose->node, hose->index, PMEINTCONFIG, pme_value);
-			if (aer_value >> 63)
-				write_piu_ior0(hose->node, hose->index, AERERRINTCONFIG, aer_value);
+		if (IS_ENABLED(CONFIG_PCIEAER)) {
+			value = read_piu_ior0(hose->node, hose->index, AERERRINTCONFIG);
+			if (value >> 63) {
+				handle_irq(hose->service_irq);
+				write_piu_ior0(hose->node, hose->index, AERERRINTCONFIG, value);
+			}
 		}
 
 		if (hose->iommu_enable) {
-- 
2.33.0

