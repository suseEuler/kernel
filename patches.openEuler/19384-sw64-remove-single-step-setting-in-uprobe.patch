From 8c501acc55e0a0f17270fae6ba74af2d0e2a99df Mon Sep 17 00:00:00 2001
From: He Chuyue <hechuyue@wxiat.com>
Date: Mon, 17 Oct 2022 09:16:19 +0800
Subject: [PATCH] sw64: remove single step setting in uprobe
Patch-mainline: Not yet, from openEuler
References: bsn#22
openEuler-commit: 8c501acc55e0a0f17270fae6ba74af2d0e2a99df
Modified-by-SEL: No


Sunway inclusion
category: feature
bugzilla: https://gitee.com/openeuler/kernel/issues/I5XTMN

--------------------------------

There is no point in calling user_{enable,disable}_single_step()
since uprobe breakpoints are implemented by illegal instructions
on sw64.

The arch-specific implementation of these two functions have been
removed before, and it's time to remove the calling now.

Signed-off-by: He Chuyue <hechuyue@wxiat.com>
Reviewed-by: He Sheng <hesheng@wxiat.com>
Signed-off-by: Gu Zitao <guzitao@wxiat.com>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 arch/sw_64/kernel/uprobes.c | 6 ------
 1 file changed, 6 deletions(-)

diff --git a/arch/sw_64/kernel/uprobes.c b/arch/sw_64/kernel/uprobes.c
index 1160ca1e836a..e25793f4a058 100644
--- a/arch/sw_64/kernel/uprobes.c
+++ b/arch/sw_64/kernel/uprobes.c
@@ -4,8 +4,6 @@
 #include <linux/uprobes.h>
 #include <linux/ptrace.h>
 
-#define UPROBE_TRAP_NR	ULONG_MAX
-
 /**
  * arch_uprobe_analyze_insn - instruction analysis including validity and fixups.
  * @mm: the probed address space.
@@ -54,8 +52,6 @@ int arch_uprobe_pre_xol(struct arch_uprobe *aup, struct pt_regs *regs)
 	/* Instruction points to execute ol */
 	instruction_pointer_set(regs, utask->xol_vaddr);
 
-	user_enable_single_step(current);
-
 	return 0;
 }
 
@@ -66,8 +62,6 @@ int arch_uprobe_post_xol(struct arch_uprobe *aup, struct pt_regs *regs)
 	/* Instruction points to execute next to breakpoint address */
 	instruction_pointer_set(regs, utask->vaddr + 4);
 
-	user_disable_single_step(current);
-
 	return 0;
 }
 
-- 
2.33.0

