From 8fee6205d28a0e76eb2ff7887452f4e2d529685c Mon Sep 17 00:00:00 2001
From: Guoqing Jiang <guoqing.jiang@suse.com>
Date: Fri, 21 Jan 2022 16:51:26 +0800
Subject: [PATCH] sched/rt: Fix double enqueue for qos scheduler
Patch-mainline: Not yet, from openEuler
References: bsn#22 bsn#75
openEuler-commit: d2645793092911c2f0503bccaef40cb52994579f
Modified-by-SEL: Yes, refreshed due to different context

The out-of-tree qos scheduler is added to euler kernel by Huawei,
and the commit f558c2b834ec ("sched/rt: Fix double enqueue caused
by rt_effective_prio") also applies to this scheduler.

But in OLK-5.10, the changed is folded into original commit by
d26457930929, let's seperate the change from original one.

Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 kernel/sched/core.c |    5 ++---
 1 file changed, 2 insertions(+), 3 deletions(-)

--- a/kernel/sched/core.c
+++ b/kernel/sched/core.c
@@ -8495,7 +8495,6 @@ static inline int alloc_qos_sched_group(
 static void sched_change_qos_group(struct task_struct *tsk, struct task_group *tg)
 {
 	struct sched_attr attr;
-	struct rq *rq = task_rq(tsk);
 
 	/*
 	 * No need to re-setcheduler when a task is exiting or the task
@@ -8506,8 +8505,8 @@ static void sched_change_qos_group(struc
 	    (tg->qos_level == -1)) {
 		attr.sched_priority = 0;
 		attr.sched_policy = SCHED_IDLE;
-		attr.sched_nice = PRIO_TO_NICE(tsk->static_prio);
-		__setscheduler(rq, tsk, &attr, 0);
+		__setscheduler_params(tsk, &attr);
+		__setscheduler_prio(tsk, tsk->static_prio);
 	}
 }
 
