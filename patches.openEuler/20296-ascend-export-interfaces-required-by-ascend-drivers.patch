From c1530afc248a7341b11a737666e90e21a7a64e55 Mon Sep 17 00:00:00 2001
From: Yuan Can <yuancan@huawei.com>
Date: Mon, 14 Nov 2022 13:28:27 +0000
Subject: [PATCH] ascend: export interfaces required by ascend drivers
Patch-mainline: Not yet, from openEuler
References: bsn#22
openEuler-commit: c1530afc248a7341b11a737666e90e21a7a64e55
Modified-by-SEL: No


hulk inclusion
category: feature
bugzilla: https://gitee.com/openeuler/kernel/issues/I612UG
CVE: NA

--------------------------------

Export oom_type_notifier_call map_kernel_range and
__get_vm_area_caller for ascend drivers.
Export pm_autosleep_set_state and __vmalloc_node_range.
Export alloc_workqueue_attrs, free_workqueue_attrs
and apply_workqueue_attrs.

Signed-off-by: Yuan Can <yuancan@huawei.com>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 kernel/power/autosleep.c | 1 +
 kernel/workqueue.c       | 3 +++
 mm/oom_kill.c            | 1 +
 mm/vmalloc.c             | 3 +++
 4 files changed, 8 insertions(+)

diff --git a/kernel/power/autosleep.c b/kernel/power/autosleep.c
index 9af5a50d3489..6aee5077fbfa 100644
--- a/kernel/power/autosleep.c
+++ b/kernel/power/autosleep.c
@@ -113,6 +113,7 @@ int pm_autosleep_set_state(suspend_state_t state)
 	mutex_unlock(&autosleep_lock);
 	return 0;
 }
+EXPORT_SYMBOL_GPL(pm_autosleep_set_state);
 
 int __init pm_autosleep_init(void)
 {
diff --git a/kernel/workqueue.c b/kernel/workqueue.c
index 14d4c072c79b..422ee6312475 100644
--- a/kernel/workqueue.c
+++ b/kernel/workqueue.c
@@ -3353,6 +3353,7 @@ void free_workqueue_attrs(struct workqueue_attrs *attrs)
 		kfree(attrs);
 	}
 }
+EXPORT_SYMBOL_GPL(free_workqueue_attrs);
 
 /**
  * alloc_workqueue_attrs - allocate a workqueue_attrs
@@ -3378,6 +3379,7 @@ struct workqueue_attrs *alloc_workqueue_attrs(void)
 	free_workqueue_attrs(attrs);
 	return NULL;
 }
+EXPORT_SYMBOL_GPL(alloc_workqueue_attrs);
 
 static void copy_workqueue_attrs(struct workqueue_attrs *to,
 				 const struct workqueue_attrs *from)
@@ -4092,6 +4094,7 @@ int apply_workqueue_attrs(struct workqueue_struct *wq,
 
 	return ret;
 }
+EXPORT_SYMBOL_GPL(apply_workqueue_attrs);
 
 /**
  * wq_update_unbound_numa - update NUMA affinity of a wq for CPU hot[un]plug
diff --git a/mm/oom_kill.c b/mm/oom_kill.c
index ffbe8fe2bbf6..dd2b4f890403 100644
--- a/mm/oom_kill.c
+++ b/mm/oom_kill.c
@@ -1119,6 +1119,7 @@ int oom_type_notifier_call(unsigned int type, struct oom_control *oc)
 
 	return blocking_notifier_call_chain(&oom_type_notify_list, type, NULL);
 }
+EXPORT_SYMBOL_GPL(oom_type_notifier_call);
 #endif
 
 /**
diff --git a/mm/vmalloc.c b/mm/vmalloc.c
index dadbea29241d..d7a68eb0db42 100644
--- a/mm/vmalloc.c
+++ b/mm/vmalloc.c
@@ -643,6 +643,7 @@ int map_kernel_range(unsigned long start, unsigned long size, pgprot_t prot,
 	flush_cache_vmap(start, start + size);
 	return ret;
 }
+EXPORT_SYMBOL(map_kernel_range);
 
 int is_vmalloc_or_module_addr(const void *x)
 {
@@ -2460,6 +2461,7 @@ struct vm_struct *__get_vm_area_caller(unsigned long size, unsigned long flags,
 	return __get_vm_area_node(size, 1, PAGE_SHIFT, flags, start, end,
 				  NUMA_NO_NODE, GFP_KERNEL, caller);
 }
+EXPORT_SYMBOL(__get_vm_area_caller);
 
 /**
  * get_vm_area - reserve a contiguous kernel virtual area
@@ -3058,6 +3060,7 @@ void *__vmalloc_node_range(unsigned long size, unsigned long align,
 
 	return NULL;
 }
+EXPORT_SYMBOL_GPL(__vmalloc_node_range);
 
 /**
  * __vmalloc_node - allocate virtually contiguous memory
-- 
2.33.0

