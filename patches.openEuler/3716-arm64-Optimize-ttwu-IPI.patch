From 25c2eb277e4206df7be74ec2633a95f2f201bf15 Mon Sep 17 00:00:00 2001
From: Xiangyou Xie <xiexiangyou@huawei.com>
Date: Fri, 19 Feb 2021 15:14:30 +0800
Subject: [PATCH] arm64: Optimize ttwu IPI
Patch-mainline: Not yet, from openEuler
References: bsn#22
openEuler-commit: 25c2eb277e4206df7be74ec2633a95f2f201bf15
Modified-by-SEL: Yes, refreshed due to context changes


hulk inclusion
category: feature
bugzilla: 47727
CVE: NA

------------------------------

When it is to wake up a task in a remote cpu shared LLC , we can
simply set need_resched flag, waking up a cpu that is in polling
idle. This wakeup action does not require an IPI.

But the premise is that it need to support _TIF_POLLING_NRFLAG

Signed-off-by: Xiangyou Xie <xiexiangyou@huawei.com>
Signed-off-by: Peng Liang <liangpeng10@huawei.com>
Reviewed-by: Hanjun Guo <guohanjun@huawei.com>
Signed-off-by: Zheng Zengkai <zhengzengkai@huawei.com>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 arch/arm64/include/asm/thread_info.h | 2 ++
 1 file changed, 2 insertions(+)

--- a/arch/arm64/include/asm/thread_info.h
+++ b/arch/arm64/include/asm/thread_info.h
@@ -71,6 +71,7 @@ void arch_release_task_struct(struct tas
 #define TIF_SYSCALL_TRACEPOINT	10	/* syscall tracepoint for ftrace */
 #define TIF_SECCOMP		11	/* syscall secure computing */
 #define TIF_SYSCALL_EMU		12	/* syscall emulation active */
+#define TIF_POLLING_NRFLAG	16	/* idle is polling for TIF_NEED_RESCHED */
 #define TIF_MEMDIE		18	/* is terminating due to OOM killer */
 #define TIF_FREEZE		19
 #define TIF_RESTORE_SIGMASK	20
@@ -97,6 +98,7 @@ void arch_release_task_struct(struct tas
 #define _TIF_SVE		(1 << TIF_SVE)
 #define _TIF_MTE_ASYNC_FAULT	(1 << TIF_MTE_ASYNC_FAULT)
 #define _TIF_32BIT_AARCH64	(1 << TIF_32BIT_AARCH64)
+#define _TIF_POLLING_NRFLAG	(1 << TIF_POLLING_NRFLAG)
 #define _TIF_NOTIFY_SIGNAL	(1 << TIF_NOTIFY_SIGNAL)
 
 #define _TIF_WORK_MASK		(_TIF_NEED_RESCHED | _TIF_SIGPENDING | \
