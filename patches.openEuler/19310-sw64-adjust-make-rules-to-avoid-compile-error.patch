From a6f35c6bbe300fe3df3bb26a1d024358778405c9 Mon Sep 17 00:00:00 2001
From: Mao Minkai <maominkai@wxiat.com>
Date: Tue, 12 Jul 2022 16:05:32 +0800
Subject: [PATCH] sw64: adjust make rules to avoid compile error
Patch-mainline: Not yet, from openEuler
References: bsn#22
openEuler-commit: a6f35c6bbe300fe3df3bb26a1d024358778405c9
Modified-by-SEL: No


Sunway inclusion
category: feature
bugzilla: https://gitee.com/openeuler/kernel/issues/I56OLG

--------------------------------

Fix compile errors when CONFIG_NUMA or CONFIG_SPARSEMEM is not set.
Some make rules are changed to avoid potential compile errors.

Signed-off-by: Mao Minkai <maominkai@wxiat.com>
Signed-off-by: Gu Zitao <guzitao@wxiat.com>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 arch/sw_64/Kconfig         | 1 +
 arch/sw_64/kernel/Makefile | 6 +++++-
 arch/sw_64/kvm/Kconfig     | 2 +-
 arch/sw_64/kvm/kvm-sw64.c  | 8 ++++++--
 arch/sw_64/mm/init.c       | 2 ++
 arch/sw_64/mm/physaddr.c   | 1 +
 6 files changed, 16 insertions(+), 4 deletions(-)

diff --git a/arch/sw_64/Kconfig b/arch/sw_64/Kconfig
index cf2f6f00708c..f03be9ce50cc 100644
--- a/arch/sw_64/Kconfig
+++ b/arch/sw_64/Kconfig
@@ -97,6 +97,7 @@ config SW64
 	select HAVE_REGS_AND_STACK_ACCESS_API
 	select ARCH_HAS_PTE_SPECIAL
 	select HARDIRQS_SW_RESEND
+	select MEMORY_HOTPLUG_SPARSE if MEMORY_HOTPLUG
 
 config LOCKDEP_SUPPORT
 	def_bool y
diff --git a/arch/sw_64/kernel/Makefile b/arch/sw_64/kernel/Makefile
index d4dc9e175d67..8cc09dd8fdbc 100644
--- a/arch/sw_64/kernel/Makefile
+++ b/arch/sw_64/kernel/Makefile
@@ -31,9 +31,13 @@ obj-$(CONFIG_HIBERNATION) += hibernate_asm.o hibernate.o
 obj-$(CONFIG_AUDIT)     += audit.o
 obj-$(CONFIG_PCI) += pci_common.o
 obj-$(CONFIG_RELOCATABLE)   += relocate.o
-obj-$(CONFIG_DEBUG_FS)	+= segvdbg.o bindvcpu.o
+obj-$(CONFIG_DEBUG_FS)	+= segvdbg.o
 obj-$(CONFIG_JUMP_LABEL) += jump_label.o
 
+ifeq ($(CONFIG_DEBUG_FS)$(CONFIG_NUMA),yy)
+obj-y += bindvcpu.o
+endif
+
 ifndef CONFIG_PCI
 obj-y += pci-noop.o
 endif
diff --git a/arch/sw_64/kvm/Kconfig b/arch/sw_64/kvm/Kconfig
index 85323b48f564..4b6201ff5dc8 100644
--- a/arch/sw_64/kvm/Kconfig
+++ b/arch/sw_64/kvm/Kconfig
@@ -44,7 +44,7 @@ config KVM_SW64_HOST
 
 config KVM_MEMHOTPLUG
 	bool "Memory hotplug support for guest"
-	depends on KVM
+	depends on KVM && MEMORY_HOTPLUG
 	help
 	  Provides memory hotplug support for SW64 guest.
 
diff --git a/arch/sw_64/kvm/kvm-sw64.c b/arch/sw_64/kvm/kvm-sw64.c
index de81f7efe01a..8ba7e18698b3 100644
--- a/arch/sw_64/kvm/kvm-sw64.c
+++ b/arch/sw_64/kvm/kvm-sw64.c
@@ -21,7 +21,9 @@
 
 bool set_msi_flag;
 unsigned long sw64_kvm_last_vpn[NR_CPUS];
+#if defined(CONFIG_DEBUG_FS) && defined(CONFIG_NUMA)
 __read_mostly bool bind_vcpu_enabled;
+#endif
 #define cpu_last_vpn(cpuid) sw64_kvm_last_vpn[cpuid]
 
 #ifdef CONFIG_SUBARCH_C3B
@@ -539,6 +541,7 @@ int kvm_arch_vcpu_ioctl_run(struct kvm_vcpu *vcpu)
 		vcpu->arch.vcb.vpcr
 			= get_vpcr(vcpu->kvm->arch.host_phys_addr, vcpu->kvm->arch.size, 0);
 
+#if defined(CONFIG_DEBUG_FS) && defined(CONFIG_NUMA)
 		if (unlikely(bind_vcpu_enabled)) {
 			int nid;
 			unsigned long end;
@@ -548,11 +551,12 @@ int kvm_arch_vcpu_ioctl_run(struct kvm_vcpu *vcpu)
 			if (pfn_to_nid(PHYS_PFN(end)) == nid)
 				set_cpus_allowed_ptr(vcpu->arch.tsk, node_to_cpumask_map[nid]);
 		}
-#else
+#endif
+#else /* !CONFIG_KVM_MEMHOTPLUG */
 		unsigned long seg_base = virt_to_phys(vcpu->kvm->arch.seg_pgd);
 
 		vcpu->arch.vcb.vpcr = get_vpcr_memhp(seg_base, 0);
-#endif
+#endif /* CONFIG_KVM_MEMHOTPLUG */
 		vcpu->arch.vcb.upcr = 0x7;
 	}
 
diff --git a/arch/sw_64/mm/init.c b/arch/sw_64/mm/init.c
index 82f2414ef7f7..e0096a0b432a 100644
--- a/arch/sw_64/mm/init.c
+++ b/arch/sw_64/mm/init.c
@@ -34,6 +34,7 @@ static pud_t vmalloc_pud[1024]	__attribute__((__aligned__(PAGE_SIZE)));
 static phys_addr_t mem_start;
 static phys_addr_t mem_size_limit;
 
+#ifdef CONFIG_MEMORY_HOTPLUG_SPARSE
 unsigned long memory_block_size_bytes(void)
 {
 	if (is_in_guest())
@@ -41,6 +42,7 @@ unsigned long memory_block_size_bytes(void)
 	else
 		return MIN_MEMORY_BLOCK_SIZE;
 }
+#endif /* CONFIG_MEMORY_HOTPLUG_SPARSE */
 
 static int __init setup_mem_size(char *p)
 {
diff --git a/arch/sw_64/mm/physaddr.c b/arch/sw_64/mm/physaddr.c
index 26769f0bf7bf..17840f4ef40b 100644
--- a/arch/sw_64/mm/physaddr.c
+++ b/arch/sw_64/mm/physaddr.c
@@ -1,6 +1,7 @@
 // SPDX-License-Identifier: GPL-2.0
 #include <linux/mmdebug.h>
 #include <linux/module.h>
+#include <linux/mm.h>
 #include <asm/page.h>
 
 unsigned long __phys_addr(unsigned long x)
-- 
2.33.0

