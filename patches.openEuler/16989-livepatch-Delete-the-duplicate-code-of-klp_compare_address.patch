From 7b8328e531477ca0e7cdfb964ac6de4299497e83 Mon Sep 17 00:00:00 2001
From: Li Huafei <lihuafei1@huawei.com>
Date: Wed, 6 Jul 2022 18:05:17 +0800
Subject: [PATCH] livepatch: Delete the duplicate code of klp_compare_address()
Patch-mainline: Not yet, from openEuler
References: bsn#22
openEuler-commit: 7b8328e531477ca0e7cdfb964ac6de4299497e83
Modified-by-SEL: No


hulk inclusion
category: feature
bugzilla: https://gitee.com/openeuler/kernel/issues/I5CJ7X

--------------------------------

Delete the duplicate code of klp_compare_address() in each arch.

Signed-off-by: Li Huafei <lihuafei1@huawei.com>
Reviewed-by: Xu Kuohai <xukuohai@huawei.com>
Signed-off-by: Zheng Zengkai <zhengzengkai@huawei.com>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 arch/arm/kernel/livepatch.c        | 10 ----------
 arch/arm64/kernel/livepatch.c      | 10 ----------
 arch/powerpc/kernel/livepatch_32.c | 10 ----------
 arch/powerpc/kernel/livepatch_64.c | 10 ----------
 arch/x86/kernel/livepatch.c        | 11 -----------
 include/linux/livepatch.h          | 12 ++++++++++++
 6 files changed, 12 insertions(+), 51 deletions(-)

diff --git a/arch/arm/kernel/livepatch.c b/arch/arm/kernel/livepatch.c
index da88113d14e9..3162de4aec70 100644
--- a/arch/arm/kernel/livepatch.c
+++ b/arch/arm/kernel/livepatch.c
@@ -86,16 +86,6 @@ static inline unsigned long klp_size_to_check(unsigned long func_size,
 	return size;
 }
 
-static inline int klp_compare_address(unsigned long pc, unsigned long func_addr,
-		const char *func_name, unsigned long check_size)
-{
-	if (pc >= func_addr && pc < func_addr + check_size) {
-		pr_err("func %s is in use!\n", func_name);
-		return -EBUSY;
-	}
-	return 0;
-}
-
 static bool check_jump_insn(unsigned long func_addr)
 {
 	unsigned long i;
diff --git a/arch/arm64/kernel/livepatch.c b/arch/arm64/kernel/livepatch.c
index 4bc35725af36..d629ad409721 100644
--- a/arch/arm64/kernel/livepatch.c
+++ b/arch/arm64/kernel/livepatch.c
@@ -80,16 +80,6 @@ static inline unsigned long klp_size_to_check(unsigned long func_size,
 	return size;
 }
 
-static inline int klp_compare_address(unsigned long pc, unsigned long func_addr,
-		const char *func_name, unsigned long check_size)
-{
-	if (pc >= func_addr && pc < func_addr + check_size) {
-		pr_err("func %s is in use!\n", func_name);
-		return -EBUSY;
-	}
-	return 0;
-}
-
 static bool check_jump_insn(unsigned long func_addr)
 {
 	unsigned long i;
diff --git a/arch/powerpc/kernel/livepatch_32.c b/arch/powerpc/kernel/livepatch_32.c
index a3cf41af073e..4ce4bd07eaaf 100644
--- a/arch/powerpc/kernel/livepatch_32.c
+++ b/arch/powerpc/kernel/livepatch_32.c
@@ -83,16 +83,6 @@ static inline unsigned long klp_size_to_check(unsigned long func_size,
 	return size;
 }
 
-static inline int klp_compare_address(unsigned long pc, unsigned long func_addr,
-		const char *func_name, unsigned long check_size)
-{
-	if (pc >= func_addr && pc < func_addr + check_size) {
-		pr_err("func %s is in use!\n", func_name);
-		return -EBUSY;
-	}
-	return 0;
-}
-
 static bool check_jump_insn(unsigned long func_addr)
 {
 	unsigned long i;
diff --git a/arch/powerpc/kernel/livepatch_64.c b/arch/powerpc/kernel/livepatch_64.c
index 0098ad48f918..acc6d94a5c91 100644
--- a/arch/powerpc/kernel/livepatch_64.c
+++ b/arch/powerpc/kernel/livepatch_64.c
@@ -89,16 +89,6 @@ static inline unsigned long klp_size_to_check(unsigned long func_size,
 	return size;
 }
 
-static inline int klp_compare_address(unsigned long pc, unsigned long func_addr,
-		const char *func_name, unsigned long check_size)
-{
-	if (pc >= func_addr && pc < func_addr + check_size) {
-		pr_err("func %s is in use!\n", func_name);
-		return -EBUSY;
-	}
-	return 0;
-}
-
 static bool check_jump_insn(unsigned long func_addr)
 {
 	unsigned long i;
diff --git a/arch/x86/kernel/livepatch.c b/arch/x86/kernel/livepatch.c
index 0a2ba5c8ba4e..824b538d2861 100644
--- a/arch/x86/kernel/livepatch.c
+++ b/arch/x86/kernel/livepatch.c
@@ -66,17 +66,6 @@ static inline unsigned long klp_size_to_check(unsigned long func_size,
 	return size;
 }
 
-static inline int klp_compare_address(unsigned long stack_addr,
-		unsigned long func_addr, const char *func_name,
-		unsigned long check_size)
-{
-	if (stack_addr >= func_addr && stack_addr < func_addr + check_size) {
-		pr_err("func %s is in use!\n", func_name);
-		return -EBUSY;
-	}
-	return 0;
-}
-
 static bool check_jump_insn(unsigned long func_addr)
 {
 	int len = JMP_E9_INSN_SIZE;
diff --git a/include/linux/livepatch.h b/include/linux/livepatch.h
index 5f88e6429484..c12781f7397b 100644
--- a/include/linux/livepatch.h
+++ b/include/linux/livepatch.h
@@ -234,6 +234,18 @@ struct klp_func_node {
 struct klp_func_node *klp_find_func_node(const void *old_func);
 void klp_add_func_node(struct klp_func_node *func_node);
 void klp_del_func_node(struct klp_func_node *func_node);
+
+static inline
+int klp_compare_address(unsigned long pc, unsigned long func_addr,
+			const char *func_name, unsigned long check_size)
+{
+	if (pc >= func_addr && pc < func_addr + check_size) {
+		pr_err("func %s is in use!\n", func_name);
+		return -EBUSY;
+	}
+	return 0;
+}
+
 #endif
 
 int klp_apply_section_relocs(struct module *pmod, Elf_Shdr *sechdrs,
-- 
2.33.0

