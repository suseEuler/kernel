From 1daef7b0cae57da126f5accceba2058dd796000d Mon Sep 17 00:00:00 2001
From: Yang Jihong <yangjihong1@huawei.com>
Date: Wed, 6 Jul 2022 18:05:31 +0800
Subject: [PATCH] livepatch/powerpc32: Add arch_klp_module_check_calltrace
Patch-mainline: Not yet, from openEuler
References: bsn#22
openEuler-commit: 1daef7b0cae57da126f5accceba2058dd796000d
Modified-by-SEL: No


hulk inclusion
category: feature
bugzilla: https://gitee.com/openeuler/kernel/issues/I5CJ7X

--------------------------------

Add arch_klp_module_check_calltrace to check whether stacks of all tasks
are within the code segment of module.

Signed-off-by: Yang Jihong <yangjihong1@huawei.com>
Reviewed-by: Xu Kuohai <xukuohai@huawei.com>
Signed-off-by: Zheng Zengkai <zhengzengkai@huawei.com>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 arch/powerpc/kernel/livepatch_32.c | 23 +++++++++++++++++++++++
 1 file changed, 23 insertions(+)

diff --git a/arch/powerpc/kernel/livepatch_32.c b/arch/powerpc/kernel/livepatch_32.c
index 4f42e6986a27..603f1d61cc23 100644
--- a/arch/powerpc/kernel/livepatch_32.c
+++ b/arch/powerpc/kernel/livepatch_32.c
@@ -70,6 +70,7 @@ struct stackframe {
 struct walk_stackframe_args {
 	int enable;
 	struct klp_func_list *check_funcs;
+	struct module *mod;
 	int ret;
 };
 
@@ -366,6 +367,28 @@ int klp_check_calltrace(struct klp_patch *patch, int enable)
 	free_list(&check_funcs);
 	return ret;
 }
+
+static int check_module_calltrace(struct stackframe *frame, void *data)
+{
+	struct walk_stackframe_args *args = data;
+
+	if (within_module_core(frame->pc, args->mod)) {
+		pr_err("module %s is in use!\n", args->mod->name);
+		return (args->ret = -EBUSY);
+	}
+	return 0;
+}
+
+int arch_klp_module_check_calltrace(void *data)
+{
+	struct walk_stackframe_args args = {
+		.mod = (struct module *)data,
+		.ret = 0
+	};
+
+	return do_check_calltrace(&args, check_module_calltrace);
+}
+
 #endif
 
 #ifdef CONFIG_LIVEPATCH_WO_FTRACE
-- 
2.33.0

